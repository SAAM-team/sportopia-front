[{"/home/ayako/ltuc/401/sportopia-front/src/index.js":"1","/home/ayako/ltuc/401/sportopia-front/src/App.js":"2","/home/ayako/ltuc/401/sportopia-front/src/reportWebVitals.js":"3","/home/ayako/ltuc/401/sportopia-front/src/store/index.js":"4","/home/ayako/ltuc/401/sportopia-front/src/reducers/bidding.js":"5","/home/ayako/ltuc/401/sportopia-front/src/reducers/products-reducer.js":"6","/home/ayako/ltuc/401/sportopia-front/src/reducers/admin_reducer.js":"7","/home/ayako/ltuc/401/sportopia-front/src/reducers/categories-reducer.js":"8","/home/ayako/ltuc/401/sportopia-front/src/components/category-prods/category-prods.js":"9","/home/ayako/ltuc/401/sportopia-front/src/components/circle/circle.js":"10","/home/ayako/ltuc/401/sportopia-front/src/components/signin.js":"11","/home/ayako/ltuc/401/sportopia-front/src/components/header/header.js":"12","/home/ayako/ltuc/401/sportopia-front/src/context/global-state.js":"13","/home/ayako/ltuc/401/sportopia-front/src/components/bidding/bidding-main.js":"14","/home/ayako/ltuc/401/sportopia-front/src/components/bidding/bidding-room.js":"15","/home/ayako/ltuc/401/sportopia-front/src/components/admin/index.js":"16","/home/ayako/ltuc/401/sportopia-front/src/components/products/products.js":"17","/home/ayako/ltuc/401/sportopia-front/src/reducers/actions.js":"18","/home/ayako/ltuc/401/sportopia-front/src/reducers/categories-action.js":"19","/home/ayako/ltuc/401/sportopia-front/src/auth/auth.js":"20","/home/ayako/ltuc/401/sportopia-front/src/reducers/product-action .js":"21","/home/ayako/ltuc/401/sportopia-front/src/reducers/admin_actions.js":"22","/home/ayako/ltuc/401/sportopia-front/src/components/carousel/carousel.js":"23","/home/ayako/ltuc/401/sportopia-front/src/if/if.js":"24","/home/ayako/ltuc/401/sportopia-front/src/reducers/cart-action.js":"25","/home/ayako/ltuc/401/sportopia-front/src/components/cart/cart.js":"26","/home/ayako/ltuc/401/sportopia-front/src/reducers/cart-reducer.js":"27","/home/ayako/ltuc/401/sportopia-front/src/reducers/favorite-reducer.js":"28","/home/ayako/ltuc/401/sportopia-front/src/components/favorite/favorite.js":"29","/home/ayako/ltuc/401/sportopia-front/src/reducers/favorit-action.js":"30"},{"size":746,"mtime":1607782743127,"results":"31","hashOfConfig":"32"},{"size":1474,"mtime":1607922451851,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":1607516618920,"results":"34","hashOfConfig":"32"},{"size":616,"mtime":1607921708661,"results":"35","hashOfConfig":"32"},{"size":581,"mtime":1607776691157,"results":"36","hashOfConfig":"32"},{"size":1356,"mtime":1607870243730,"results":"37","hashOfConfig":"32"},{"size":1189,"mtime":1607776691157,"results":"38","hashOfConfig":"32"},{"size":605,"mtime":1607787946847,"results":"39","hashOfConfig":"32"},{"size":3722,"mtime":1607869184750,"results":"40","hashOfConfig":"32"},{"size":1119,"mtime":1607778567177,"results":"41","hashOfConfig":"32"},{"size":20004,"mtime":1607784127067,"results":"42","hashOfConfig":"32"},{"size":13838,"mtime":1607923556151,"results":"43","hashOfConfig":"32"},{"size":2923,"mtime":1607776691157,"results":"44","hashOfConfig":"32"},{"size":4136,"mtime":1607778092107,"results":"45","hashOfConfig":"32"},{"size":2115,"mtime":1607783310827,"results":"46","hashOfConfig":"32"},{"size":15819,"mtime":1607851668580,"results":"47","hashOfConfig":"32"},{"size":4455,"mtime":1607922898741,"results":"48","hashOfConfig":"32"},{"size":820,"mtime":1607776691157,"results":"49","hashOfConfig":"32"},{"size":592,"mtime":1607862340940,"results":"50","hashOfConfig":"32"},{"size":533,"mtime":1607780782567,"results":"51","hashOfConfig":"32"},{"size":676,"mtime":1607870465540,"results":"52","hashOfConfig":"32"},{"size":5539,"mtime":1607863419760,"results":"53","hashOfConfig":"32"},{"size":2261,"mtime":1607776691077,"results":"54","hashOfConfig":"32"},{"size":455,"mtime":1607776691157,"results":"55","hashOfConfig":"32"},{"size":1256,"mtime":1607942563005,"results":"56","hashOfConfig":"32"},{"size":4347,"mtime":1607942849855,"results":"57","hashOfConfig":"32"},{"size":907,"mtime":1607921259611,"results":"58","hashOfConfig":"32"},{"size":932,"mtime":1607922229611,"results":"59","hashOfConfig":"32"},{"size":3783,"mtime":1607922490261,"results":"60","hashOfConfig":"32"},{"size":1300,"mtime":1607922610631,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"cptyxi",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/home/ayako/ltuc/401/sportopia-front/src/index.js",[],["133","134"],"/home/ayako/ltuc/401/sportopia-front/src/App.js",[],"/home/ayako/ltuc/401/sportopia-front/src/reportWebVitals.js",[],"/home/ayako/ltuc/401/sportopia-front/src/store/index.js",[],"/home/ayako/ltuc/401/sportopia-front/src/reducers/bidding.js",[],"/home/ayako/ltuc/401/sportopia-front/src/reducers/products-reducer.js",["135"],"import cookies from 'react-cookies';\n\nlet initialState = { \n  results: [] ,\n  activeProducts : [],\n};\nlet cId = cookies.load('cId');\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case 'GET_P':\n      // if(cId){\n      //   let filterdData = payload.filter(product=> product.category_id == cId);\n      //  return {\n      //    results : payload,\n      //    activeProducts : filterdData,\n      //  };\n      // }else{\n        return {\n          results : payload,\n          activeProducts : payload\n        // };\n      }\n\n      case 'ACTIVE':\n       let filterdProducts = state.results.filter(product=> product.category_id===payload);\n\n      return {\n        results : state.results,\n        activeProducts : filterdProducts,\n      };\n      case 'DEC-Stock':\n        state.results.forEach((item) => {\n          console.log('DEC_STOCK',item);\n            if (item.name === payload.name) item.inStock--;\n        });\n        return { ...state };\n\n    case 'INC-Stock':\n        state.results.forEach((item) => {\n            if (item.name === payload.name) item.inStock++;\n        });\n        return { ...state };\n\n    default:\n      return {\n        results : state.results,\n        activeProducts : state.activeProducts\n      }\n  }\n};\n","/home/ayako/ltuc/401/sportopia-front/src/reducers/admin_reducer.js",[],"/home/ayako/ltuc/401/sportopia-front/src/reducers/categories-reducer.js",[],"/home/ayako/ltuc/401/sportopia-front/src/components/category-prods/category-prods.js",["136","137","138","139"],"import { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport { CardHeader, Zoom, Tooltip, Badge } from '@material-ui/core';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShoppingCartRoundedIcon from '@material-ui/icons/ShoppingCartRounded';\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\nimport './category-prods.css';\nimport React, { useEffect } from 'react'\nimport { activeCategory } from '../../reducers/categories-action';\nimport { getRemoteData } from '../../reducers/product-action ';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 300,\n    // maxHeight:500,\n    boxShadow: '0 0 10px 0px rgba(0, 0, 0, 0.25)'\n  },\n  media: {\n    height: 0,\n    paddingTop: '100%' // 16:9\n  },\n  header: {\n    height: 175,\n    // paddingBottom: '0', // 16:9\n    alignItems: 'center'\n  }\n}));\n\n\nconst Products = (props) => {\n  // console.log('props inside Category Product', props);\n  useEffect(() => {\n    props.getRemoteData();\n  }, [])\n  const classes = useStyles();\n  return (\n    <>\n      <Typography style={{ marginLeft: '45%', marginBottom: '20px', color: '#050505' }} variant=\"h3\" noWrap>\n        {props.active.category_name}\n      </Typography>\n      <section className='container'>\n\n        {props.products.map((product) => {\n          return (\n            <Card className={classes.root} key={product.id} >\n              <CardMedia\n                className={classes.media}\n                image={product.main_img}\n                title={product.id}\n              />\n              <CardHeader\n                className={classes.header}\n                title={product.name}\n                subheader={product.description}\n              />\n              <CardActions disableSpacing>\n                <CardContent>\n                  <Typography\n                    variant='body2'\n                    color='textSecondary'\n                    component='p'\n                  >\n                    price: {product.price} $\n              </Typography>\n                </CardContent>\n                <Tooltip\n                  placement='top'\n                  arrow\n                  TransitionComponent={Zoom}\n                  title='add to favorite'\n                >\n                  <IconButton aria-label='show 4 new mails' color='inherit'>\n                    <Badge badgeContent={0} color='secondary'>\n                      <FavoriteRoundedIcon />\n                    </Badge>\n                  </IconButton>\n                </Tooltip>\n\n                <Tooltip\n                  placement='top'\n                  arrow\n                  TransitionComponent={Zoom}\n                  title='add to cart'\n                >\n                  <IconButton aria-label='show 4 new mails' color='inherit'>\n                    <Badge badgeContent={0} color='secondary'>\n                      <ShoppingCartRoundedIcon />\n                    </Badge>\n                  </IconButton>\n                </Tooltip>\n              </CardActions>\n            </Card>\n\n          );\n        })}\n      </section>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    products: state.products.activeProducts,\n    active: state.categories.active\n  };\n};\n\nconst mapDispatchToProps = { activeCategory, getRemoteData };\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Products);","/home/ayako/ltuc/401/sportopia-front/src/components/circle/circle.js",[],"/home/ayako/ltuc/401/sportopia-front/src/components/signin.js",["140","141","142"],"import React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  Button,\n  CssBaseline,\n  TextField,\n  Grid,\n  Box,\n  Link,\n  Typography,\n  Container,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Radio,\n  RadioGroup,\n  FormControlLabel\n} from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport LockOpenOutlinedIcon from '@material-ui/icons/LockOpenOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login';\nimport { StateContext } from '../context/global-state';\n\nexport default function SignIn() {\n  // ContextState\n\n  const stateContext = useContext(StateContext);\n  const history = useHistory();\n\n  // States\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [address, setAddress] = useState('');\n  const [telephone, setTelephone] = useState('');\n  const [companyName, setComapnyName] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [gender, setGender] = useState('');\n\n  const [logged, setLoginState] = useState(false);\n  const [register, setRegister] = useState(false);\n  const [registerBuyer, setRegisterBuyer] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  // Functions\n\n  const classes = useStyles();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const responseGoogle = (response) => {\n    console.log(response);\n  };\n  const responseFacebook = (response) => {\n    console.log(response);\n  };\n\n  async function handleSignIn(event) {\n    event.preventDefault();\n    stateContext.login(username, password);\n    if (!stateContext.error) history.push('/');\n  }\n  async function handleSignUp(event, role) {\n    event.preventDefault();\n    const objBody = {\n      username: username,\n      password: password,\n      role: role,\n      companyname: companyName,\n      firstname: firstName,\n      lastname: lastName,\n      adress: address,\n      gender: gender,\n      telephone: telephone\n    };\n    stateContext.register(objBody);\n  }\n\n  return (\n    <>\n      <Container component='main' maxWidth='xs'>\n        {register ? (\n          <Card>\n            <CardContent>\n              <CssBaseline />\n              <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                  <LockOutlinedIcon />\n                </Avatar>\n                <Typography component='h1' variant='h4'>\n                  Sign Up\n                </Typography>\n                <Link\n                  component='button'\n                  onClick={() => {\n                    setRegister(!register);\n                  }}\n                  style={{ marginBottom: '0%', marginTop: '5%' }}\n                >\n                  Existing User? Sign In here!\n                </Link>\n\n                <form className={classes.form}>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                      <Button\n                        style={{ minHeight: 50 }}\n                        type='button'\n                        fullWidth\n                        variant='contained'\n                        color='secondary'\n                        className={classes.submit}\n                        onClick={() => {\n                          setRegisterBuyer(true);\n                          handleClickOpen();\n                        }}\n                      >\n                        Buyer\n                      </Button>\n                    </Grid>\n                    <Dialog\n                      open={open}\n                      onClose={handleClose}\n                      aria-labelledby='form-dialog-title'\n                    >\n                      <DialogTitle id='form-dialog-title'>\n                        {registerBuyer\n                          ? 'Sign Up as a Buyer'\n                          : 'Sign Up as a Seller'}\n                      </DialogTitle>\n                      <DialogContent>\n                        {registerBuyer ? (\n                          <form className={classes.form}>\n                            <Grid\n                              container\n                              spacing={1}\n                              style={{\n                                marginBottom: 20\n                              }}\n                            >\n                              <Grid item xs={2} sm={2.7}></Grid>\n                              <Grid item xs={1} sm={5}>\n                                <GoogleLogin\n                                  clientId='1017961095121-u3na2ktuf9i8m0s7ndq0l9ishqpsbfst.apps.googleusercontent.com'\n                                  buttonText='Signup'\n                                  onSuccess={responseGoogle}\n                                  onFailure={responseGoogle}\n                                  cookiePolicy={'single_host_origin'}\n                                  style={{\n                                    borderRightWidth: 1,\n                                    borderRightColor: 'black'\n                                  }}\n                                />\n                              </Grid>\n                              <Grid item xs={1} sm={4}>\n                                <FacebookLogin\n                                  appId='562118384400275'\n                                  fields='name,username,picture'\n                                  scope='public_profile,user_friends'\n                                  callback={responseFacebook}\n                                  icon='fa-facebook'\n                                  textButton='SignUp'\n                                  size='small'\n                                />\n                              </Grid>\n                            </Grid>\n                            <Grid container spacing={2}>\n                              <Grid item xs={12} sm={6}>\n                                <TextField\n                                  name='userName'\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  id='userName'\n                                  label='User Name'\n                                  onChange={(e) => setUsername(e.target.value)}\n                                  autoFocus\n                                />\n                              </Grid>\n                              <Grid item xs={12} sm={6}>\n                                <TextField\n                                  type='password'\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  onChange={(e) => setPassword(e.target.value)}\n                                  id='password'\n                                  label='Password'\n                                  name='password'\n                                />\n                              </Grid>\n                              <Grid item xs={12} sm={6}>\n                                <TextField\n                                  name='firstName'\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  id='firstName'\n                                  label='First Name'\n                                  onChange={(e) => setFirstName(e.target.value)}\n                                  autoFocus\n                                />\n                              </Grid>\n                              <Grid item xs={2} sm={6}>\n                                <TextField\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  onChange={(e) => setLastName(e.target.value)}\n                                  id='lastName'\n                                  label='Last Name'\n                                  name='lastName'\n                                />\n                              </Grid>\n                              <Grid item xs={2} sm={12}>\n                                <TextField\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  onChange={(e) => setAddress(e.target.value)}\n                                  id='address'\n                                  label='Address'\n                                  name='address'\n                                />\n                              </Grid>\n                              <Grid item xs={2} sm={8}>\n                                <RadioGroup\n                                  row\n                                  aria-label='gender'\n                                  name='gender1'\n                                  value={gender}\n                                  onChange={(e) => setGender(e.target.value)}\n                                >\n                                  <FormControlLabel\n                                    value='female'\n                                    control={<Radio />}\n                                    label='Female'\n                                  />\n                                  <FormControlLabel\n                                    value='male'\n                                    control={<Radio />}\n                                    label='Male'\n                                  />\n                                  <FormControlLabel\n                                    value='other'\n                                    control={<Radio />}\n                                    label='Other'\n                                  />\n                                </RadioGroup>\n                              </Grid>\n                              <Grid item xs={2} sm={4}>\n                                <TextField\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  onChange={(e) => setTelephone(e.target.value)}\n                                  id='telephone'\n                                  label='Telephone'\n                                  name='telephone'\n                                />\n                              </Grid>\n                            </Grid>\n                            <Button\n                              type='submit'\n                              fullWidth\n                              variant='contained'\n                              color='primary'\n                              className={classes.submit}\n                              onClick={(event) => handleSignUp(event, 'buyer')}\n                            >\n                              Sign Up\n                            </Button>\n                            <Typography\n                              style={{ fontSize: 15 }}\n                              component='h5'\n                              variant='h5'\n                            >\n                              {stateContext.success\n                                ? stateContext.success\n                                : stateContext.error}\n                            </Typography>\n                          </form>\n                        ) : (\n                          <form className={classes.form}>\n                            <Grid container spacing={2}>\n                              <Grid item xs={12} sm={6}>\n                                <TextField\n                                  name='userName'\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  id='userName'\n                                  label='User Name'\n                                  onChange={(e) => setUsername(e.target.value)}\n                                  autoFocus\n                                />\n                              </Grid>\n                              <Grid item xs={12} sm={6}>\n                                <TextField\n                                  type='password'\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  onChange={(e) => setPassword(e.target.value)}\n                                  id='password'\n                                  label='Password'\n                                  name='password'\n                                />\n                              </Grid>\n                              <Grid item xs={12} sm={6}>\n                                <TextField\n                                  name='companyName'\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  id='companyName'\n                                  label='Company Name'\n                                  onChange={(e) => setFirstName(e.target.value)}\n                                  autoFocus\n                                />\n                              </Grid>\n                              <Grid item xs={2} sm={6}>\n                                <TextField\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  onChange={(e) => setTelephone(e.target.value)}\n                                  id='telephone'\n                                  label='Telephone'\n                                  name='telephone'\n                                />\n                              </Grid>\n                              <Grid item xs={2} sm={12}>\n                                <TextField\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  onChange={(e) => setAddress(e.target.value)}\n                                  id='address'\n                                  label='Address'\n                                  name='address'\n                                />\n                              </Grid>\n                            </Grid>\n                            <Button\n                              type='submit'\n                              fullWidth\n                              variant='contained'\n                              color='primary'\n                              className={classes.submit}\n                              onClick={(event) => handleSignUp(event, 'seller')}\n                            >\n                              Sign Up\n                            </Button>\n                          </form>\n                        )}\n                      </DialogContent>\n                    </Dialog>\n                    <Grid item xs={12} sm={6}>\n                      <Button\n                        style={{ minHeight: 50 }}\n                        type='button'\n                        fullWidth\n                        variant='contained'\n                        color='secondary'\n                        className={classes.submit}\n                        onClick={() => {\n                          setRegisterBuyer(false);\n                          handleClickOpen();\n                        }}\n                      >\n                        Seller\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </form>\n              </div>\n              <Box mt={5}></Box>\n            </CardContent>\n          </Card>\n        ) : (\n          <Card>\n            <CardContent>\n              <CssBaseline />\n              <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                  <LockOpenOutlinedIcon />\n                </Avatar>\n                <Typography component='h1' variant='h4'>\n                  Sign In\n                </Typography>\n                <Link\n                  component='button'\n                  onClick={() => {\n                    setRegister(true);\n                  }}\n                  style={{ marginBottom: '10%', marginTop: '5%' }}\n                >\n                  New User? Sign up here!\n                </Link>\n                <Grid container spacing={1}>\n                  <Grid item xs={2} sm={2.7}></Grid>\n                  <Grid item xs={1} sm={5}>\n                    <GoogleLogin\n                      clientId='1017961095121-u3na2ktuf9i8m0s7ndq0l9ishqpsbfst.apps.googleusercontent.com'\n                      buttonText='Login'\n                      onSuccess={responseGoogle}\n                      onFailure={responseGoogle}\n                      cookiePolicy={'single_host_origin'}\n                    />\n                  </Grid>\n                  <Grid item xs={1} sm={4}>\n                    <FacebookLogin\n                      appId='562118384400275'\n                      fields='name,username,picture'\n                      scope='public_profile,user_friends'\n                      callback={responseFacebook}\n                      icon='fa-facebook'\n                      textButton='Login'\n                      size='small'\n                    />\n                  </Grid>\n                </Grid>\n                <Typography component='h1' variant='h5'>\n                  Or\n                </Typography>\n                <form className={classes.form}>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                      <TextField\n                        name='userName'\n                        variant='outlined'\n                        required\n                        fullWidth\n                        id='userName'\n                        label='User Name'\n                        onChange={(e) => setUsername(e.target.value)}\n                        autoFocus\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <TextField\n                        type='password'\n                        variant='outlined'\n                        required\n                        fullWidth\n                        onChange={(e) => setPassword(e.target.value)}\n                        id='password'\n                        label='Password'\n                        name='password'\n                      />\n                    </Grid>\n                  </Grid>\n                  <Button\n                    type='submit'\n                    fullWidth\n                    variant='contained'\n                    color='primary'\n                    className={classes.submit}\n                    onClick={(event) => handleSignIn(event)}\n                  >\n                    Sign In\n                  </Button>\n                </form>\n                <Typography\n                  style={{ color: 'red', fontSize: 15 }}\n                  component='h5'\n                  variant='h5'\n                >\n                  {stateContext.error}\n                </Typography>\n              </div>\n              <Box mt={5}></Box>\n            </CardContent>\n          </Card>\n        )}\n      </Container>\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n","/home/ayako/ltuc/401/sportopia-front/src/components/header/header.js",["143","144","145","146"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport {\n  getRemoteData,\n  activeCategory\n} from '../../reducers/categories-action';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport {\n  List,\n  Divider,\n  Drawer,\n  ListItem,\n  ListItemText,\n  Fab,\n  Tooltip,\n  Zoom,\n  Menu,\n  MenuItem,\n  Badge,\n  InputBase,\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Button\n} from '@material-ui/core';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\nimport GavelRoundedIcon from '@material-ui/icons/GavelRounded';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport PropTypes from 'prop-types';\nimport ShoppingCartRoundedIcon from '@material-ui/icons/ShoppingCartRounded';\nimport a1 from './assets/11.gif';\nimport a2 from './assets/12.gif';\nimport a3 from './assets/13.gif';\nimport a4 from './assets/14.gif';\nimport a5 from './assets/15.gif';\nimport a6 from './assets/16.gif';\nimport a7 from './assets/17.gif';\nimport a8 from './assets/18.gif';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Auth from '../../auth/auth';\nimport cookies from 'react-cookies';\nimport {\n  getCartAPI\n} from '../../reducers/cart-action';\nimport {\n  getFavAPI\n} from '../../reducers/favorit-action';\n\nconst avatarIcons = [a1, a2, a3, a4, a5, a6, a7, a8];\n\nfunction ScrollTop(props) {\n  const { children, window } = props;\n  const classes = useStyles();\n\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100\n  });\n\n  const handleClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      '#back-to-top-anchor'\n    );\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }\n  };\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role='presentation' className={classes.root}>\n        {children}\n      </div>\n    </Zoom>\n  );\n}\nScrollTop.propTypes = {\n  children: PropTypes.element.isRequired,\n  window: PropTypes.func\n};\nlet notDeletedCart =[];\nfunction Header(props) {\n// props.cart.map((item)=>{\n//   if (item.is_deleted === false){\n//    return notDeletedCart.push(item)\n//   }\n// })\n  console.log('prrrrrrrrr', props);\n  // console.log('nnnnnn', notDeletedCart);\n\n  useEffect(() => {\n    props.getRemoteData();\n    props.getCartAPI();\n    props.getFavAPI();\n  }, []);\n\n  const classes = useStyles();\n  // start of drawer\n  const [state, setState] = React.useState(false);\n\n  const saveCategoryId = (id) => {\n    cookies.save('cId', id);\n    props.activeCategory(id);\n  }\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event.type === 'keydown' &&\n      (event.key === 'Tab' || event.key === 'Shift')\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n  const list = (anchor) => (\n    <div\n      // style={{backgroundColor: '#6BAB90', height: '100%', color:'E1F0C4' }}\n      className={classes.list}\n      role='presentation'\n      onClick={toggleDrawer(anchor, false)}\n    >\n      <Typography style={{ padding: '10px 0px 5px 10px' }} variant='h4' noWrap>\n        Categories\n      </Typography>\n      <Divider />\n      <List>\n        {props.categories.map((category, index) => (\n          <>\n            <NavLink color='inherit' to={`/category/${category.id}`}\n              onClick={() => {\n                saveCategoryId(category.id);\n                // props.getRemoteData()\n              }}>\n\n              <ListItem\n                button key={category.id}\n              >\n                <ListItemAvatar>\n                  <Avatar alt='' src={avatarIcons[index]} />\n                </ListItemAvatar>\n                <ListItemText\n                  primary={category.category_name}\n\n                />\n              </ListItem>\n            </NavLink>\n            <Divider />\n          </>\n        ))}\n      </List>\n    </div>\n  );\n  // end of drawer\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n            <NavLink color='white' to={'/favorite'}>\n      <MenuItem>\n        <IconButton aria-label='show 4 new mails' color='inherit'>\n          <Badge badgeContent={props.favLength} color='secondary'>\n            <FavoriteRoundedIcon />\n          </Badge>\n        </IconButton>\n        <p>My Favorite</p>\n      </MenuItem>\n      </NavLink>\n      <NavLink color='white' to={'/cart'}>\n        <MenuItem>\n          <IconButton aria-label='show 11 new notifications' color='inherit'>\n            {/* <Badge badgeContent={0} color='secondary'> */}\n            <Badge badgeContent={props.cartLength} color='secondary'>\n\n              <ShoppingCartRoundedIcon />\n            </Badge>\n          </IconButton>\n          <p>My Cart</p>\n        </MenuItem>\n      </NavLink>\n      {/* <MenuItem >\n        <IconButton\n          aria-label='account of current user'\n          aria-controls='primary-search-account-menu'\n          aria-haspopup='true'\n          color='inherit'\n        >\n          <PersonRoundedIcon />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem> */}\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar style={{ backgroundColor: '#157A6E' }} position='static'>\n        <Toolbar>\n          {/* ..................................burger view ......................................... */}\n\n          <IconButton\n            edge='start'\n            className={classes.menuButton}\n            color='inherit'\n            aria-label='open drawer'\n            onClick={toggleDrawer('left', true)}\n          >\n            <MenuIcon></MenuIcon>\n          </IconButton>\n          <NavLink color='inherit' to='/'>\n            <Typography className={classes.title} variant='h6' noWrap>\n              Sportopia\n          </Typography>\n          </NavLink>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder='Search…'\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div>\n            <React.Fragment key={'left'}>\n              <Drawer\n                anchor='left'\n                open={state['left']}\n                onClose={toggleDrawer('left', false)}\n              >\n                {list('left')}\n              </Drawer>\n            </React.Fragment>\n          </div>\n\n          {/* ................................icons on nav bar .................................... */}\n          <div className={classes.sectionDesktop}>\n            <Button color='inherit'>Sell</Button>\n            <Auth role={'admin'}>\n              <NavLink color='inherit' to='/admin'>\n                Admin\n              </NavLink>\n            </Auth>\n\n            <Tooltip\n              placement='top'\n              arrow\n              TransitionComponent={Zoom}\n              title='bids list'\n            >\n              <IconButton\n                aria-label='show 17 new notifications'\n                color='inherit'\n              >\n                <Badge badgeContent={17} color='secondary'>\n                  <GavelRoundedIcon />\n                </Badge>\n              </IconButton>\n            </Tooltip>\n            <NavLink color='white' to={'/favorite'}>\n            <Tooltip\n              placement='top'\n              arrow\n              TransitionComponent={Zoom}\n              title='My Favorite'\n            >\n              <IconButton aria-label='show 4 new mails' color='inherit'>\n                <Badge badgeContent={props.favLength} color='secondary'>\n                  <FavoriteRoundedIcon />\n                </Badge>\n              </IconButton>\n            </Tooltip>\n            </NavLink>\n            <NavLink color='white' to={'/cart'}>\n\n              <Tooltip\n                placement='top'\n                arrow\n                TransitionComponent={Zoom}\n                title='My Cart'\n              >\n                <IconButton aria-label='show 4 new mails' color='inherit'>\n                  {/* <Badge badgeContent={0} color='secondary'> */}\n                  <Badge badgeContent={props.cartLength} color='secondary'>\n                    <ShoppingCartRoundedIcon />\n                  </Badge>\n                </IconButton>\n              </Tooltip>\n            </NavLink>\n            <Tooltip\n              placement='top'\n              arrow\n              TransitionComponent={Zoom}\n              title='sign in / up'\n            >\n              <NavLink to='/register'>\n                <IconButton\n                  edge='end'\n                  aria-label='account of current user'\n                  aria-controls={menuId}\n                  aria-haspopup='true'\n                  // onClick={handleProfileMenuOpen}\n                  color='inherit'\n                >\n                  <PersonRoundedIcon />\n                </IconButton>\n              </NavLink>\n            </Tooltip>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label='show more'\n              aria-controls={mobileMenuId}\n              aria-haspopup='true'\n              onClick={handleMobileMenuOpen}\n              color='inherit'\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Toolbar id='back-to-top-anchor' />\n\n      {renderMobileMenu}\n      {/* {renderMenu} */}\n      <ScrollTop {...props}>\n        <Fab\n          style={{ backgroundColor: '#157A6E' }}\n          size='small'\n          aria-label='scroll back to top'\n        >\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </ScrollTop>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch'\n    }\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex'\n    }\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none'\n    }\n  },\n  root: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2)\n  },\n  list: {\n    width: 250,\n    backgroundColor: '#6BAB90',\n    height: '100%',\n    color: 'E1F0C4',\n    borderBottom: '1px solid black'\n  },\n  fullList: {\n    width: 'auto'\n  }\n}));\n\nconst mapStateToProps = (state) => {\n  // console.log('state',state.cartData.cartItem.length);\n  return {\n    categories: state.categories.results,\n    cartLength: state.cartData.cartItem.length,\n    favLength: state.favoriteData.favoriteItem.length\n  };\n};\nconst mapDispatchToProps = { getRemoteData, activeCategory, getCartAPI, getFavAPI };\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","/home/ayako/ltuc/401/sportopia-front/src/context/global-state.js",["147","148"],"import React, { useState } from 'react';\nimport superagent from 'superagent';\nimport jwt from 'jsonwebtoken';\nimport cookie from 'react-cookies';\n\nexport const StateContext = React.createContext();\nconst JWT_SECRET = 'thebestsecrett';\n\nconst API_LINK = 'https://sportopiav1.herokuapp.com';\n\nexport default function GlobalState(props) {\n  // State\n  const [isLogged, setIsLogged] = useState(false);\n  const [token, setToken] = useState('');\n  const [user, setUser] = useState({});\n  const [productId, setProductId] = useState('');\n  const [productIdBidding, setProductIdBidding] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Functions\n\n  const login = async (username, password) => {\n    let ua1 = superagent.agent();\n    try {\n      const response = await ua1\n        .post(`${API_LINK}/signin`)\n        .set('authorization', `Basic ${btoa(`${username}:${password}`)}`)\n        .end(function (err, res) {\n          // console.log(res);\n          try {\n            let token = JSON.parse(res.text);\n            validateToken(token);\n          } catch (error) {\n            setError(res.text);\n          }\n        });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const validateToken = (token) => {\n    try {\n      token = token.token;\n      console.log(token);\n      let user = jwt.verify(token, JWT_SECRET);\n      cookie.save('token', token, { path: '/', maxAge: 2592000 });\n      cookie.save('user', user.user_id, { path: '/', maxAge: 2592000 });\n      setLoginState(true, token, user);\n    } catch (e) {\n      setError('Wrong password or username');\n      setLoginState(false, null, {});\n    }\n  };\n\n  const register = async (obj) => {\n    try {\n      const response = await superagent.post(`${API_LINK}/signup`).send(obj);\n      console.log(response);\n      if (response.body.message === 'This username already used') {\n        setError(response.body.message);\n      } else {\n        if (obj.role === 'seller') {\n          setSuccess(\n            'Your registered as a Seller, Please wait 1-2 days to be activated'\n          );\n        } else {\n          setSuccess(\n            'You have registered as a Buyer Please sign with you account!!'\n          );\n        }\n      }\n    } catch (error) {\n      setError(\n        'Something Went Bad, Please try again later!! Thank you for understanding'\n      );\n    }\n  };\n\n  const setLoginState = (loggedIn, token, user) => {\n    console.log('inside the state', user);\n    setIsLogged(loggedIn);\n    setToken(token);\n    setUser(user);\n  };\n\n  const state = {\n    isLogged,\n    setIsLogged,\n    user,\n    setUser,\n    productId,\n    setProductId,\n    productIdBidding,\n    setProductIdBidding,\n    login,\n    register,\n    error,\n    success,\n    setSuccess,\n    setError\n  };\n  return (\n    <StateContext.Provider value={state}>\n      {props.children}\n    </StateContext.Provider>\n  );\n}\n","/home/ayako/ltuc/401/sportopia-front/src/components/bidding/bidding-main.js",[],"/home/ayako/ltuc/401/sportopia-front/src/components/bidding/bidding-room.js",[],"/home/ayako/ltuc/401/sportopia-front/src/components/admin/index.js",["149","150","151","152","153"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { StateContext } from '../../context/global-state';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { If, Then, Else } from '../../if/if';\nimport { deepPurple } from '@material-ui/core/colors';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport {\n  Grid,\n  Paper,\n  ListItem,\n  Divider,\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  ListItemText,\n  Fab,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Avatar,\n  Tooltip\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport { connect } from 'react-redux';\n\nimport {\n  allSellers,\n  allActiveSellers,\n  allDeActiveSellers,\n  allBuyers,\n  allActiveBuyers,\n  allDeActiveBuyers,\n  allProducts,\n  allDProducts,\n  allAProducts,\n  allBProducts,\n  allCProducts,\n  addCategory,\n  numberOfUsers\n} from '../../reducers/admin_actions';\n\n// Table Info\n\nlet rowsS = [];\nlet rowsB = [];\nlet rowP = [];\n\nexport function Admin(props) {\n  const [keys, setKeys] = useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [category, setCategory] = useState('');\n\n  // Effect\n\n  useEffect(() => {\n    props.numberOfUsers();\n  }, []);\n\n  useEffect(() => {\n    rowsS = [];\n    rowsB = [];\n    rowP = [];\n    setKeys(props.info.length ? Object.keys(props.info[0]) : []);\n    props.info.forEach((item) => {\n      if (item.user_role === 'seller') {\n        rowsS.push(\n          createSData(\n            item.user_name,\n            item.user_role,\n            item.company_name,\n            item.adress,\n            item.telephone\n          )\n        );\n      } else if (item.user_role === 'buyer') {\n        rowsB.push(\n          createBData(\n            item.user_name,\n            item.user_role,\n            item.first_name,\n            item.last_name,\n            item.adress,\n            item.telephone,\n            item.gender,\n            item.card_number ? 'XXXXXXXXXXX' : 'Not Inserted'\n          )\n        );\n      } else {\n        rowP.push(\n          createPData(\n            item.name,\n            item.description,\n            item.main_img,\n            item.price,\n            item.category_name,\n            item.company_name\n          )\n        );\n      }\n    });\n  }, [props.info]);\n\n  const classes = useStyles();\n\n  // Functions\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleAllSellers = () => {\n    props.allSellers();\n  };\n\n  const handleAllActiveSeller = () => {\n    props.allActiveSellers();\n  };\n\n  const handleAllDeActiveSeller = () => {\n    props.allDeActiveSellers();\n  };\n\n  const handleAllBuyers = () => {\n    props.allBuyers();\n  };\n\n  const handleAllActiveBuyers = () => {\n    props.allActiveBuyers();\n  };\n\n  const handleAllDeActiveBuyers = () => {\n    props.allDeActiveBuyers();\n  };\n  const handleAllProducts = () => {\n    props.allProducts();\n  };\n\n  const handleDeletedProducts = () => {\n    props.allDProducts();\n  };\n\n  const handleActiveProducts = () => {\n    props.allAProducts();\n  };\n\n  const handleBoughtProducts = () => {\n    props.allBProducts();\n  };\n\n  const handleCartProducts = () => {\n    props.allCProducts();\n  };\n\n  const handleFavProducts = () => {};\n\n  const handleAddCategory = () => {\n    props.addCategory(category);\n  };\n\n  const generateList = () => {\n    return (\n      <Grid item xs={12}>\n        <ListItem button>\n          <Avatar className={classes.purple}>A</Avatar>\n          <ListItemText primary='Anthign' />\n          <Divider />\n        </ListItem>\n        <ListItem button onClick={() => handleAllSellers()}>\n          <ListItemText secondary='Sellers' />\n          <Divider />\n        </ListItem>\n        <ListItem button onClick={() => handleAllActiveSeller()}>\n          <ListItemText secondary='Active Sellers' />\n          <Divider />\n        </ListItem>\n        <ListItem button onClick={() => handleAllDeActiveSeller()}>\n          <ListItemText secondary='Deactivate Sellers' />\n          <Divider />\n        </ListItem>\n        <ListItem button onClick={() => handleAllBuyers()}>\n          <ListItemText secondary='Buyers' />\n          <Divider />\n        </ListItem>\n        <ListItem button onClick={() => handleAllActiveBuyers()}>\n          <ListItemText secondary='Active Buyers' />\n          <Divider />\n        </ListItem>\n        <ListItem button onClick={() => handleAllDeActiveBuyers()}>\n          <ListItemText secondary='Deactivate Buyers' />\n          <Divider />\n        </ListItem>\n        <ListItem button onClick={() => handleAllProducts()}>\n          <ListItemText secondary='Products' />\n          <Divider />\n        </ListItem>\n        <ListItem button onClick={() => handleDeletedProducts()}>\n          <ListItemText secondary='Deleted Products' />\n          <Divider />\n        </ListItem>\n        <ListItem button onClick={() => handleActiveProducts()}>\n          <ListItemText secondary='Active Products' />\n          <Divider />\n        </ListItem>\n        <ListItem button onClick={() => handleBoughtProducts()}>\n          <ListItemText secondary='Bough Products' />\n          <Divider />\n        </ListItem>\n        <ListItem button onClick={() => handleCartProducts()}>\n          <ListItemText secondary='In Cart/Not Bought Products' />\n          <Divider />\n        </ListItem>\n      </Grid>\n    );\n  };\n  return (\n    <>\n      <Tooltip title='Add Category'>\n        <Fab\n          style={{ position: 'absolute', top: 70, right: 30 }}\n          color='primary'\n          aria-label='add'\n        >\n          <AddIcon onClick={handleClickOpen} />\n        </Fab>\n      </Tooltip>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby='form-dialog-title'\n      >\n        <DialogTitle id='form-dialog-title'>Adding Category</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Adding New Category</DialogContentText>\n          <TextField\n            autoFocus\n            margin='dense'\n            id='name'\n            label='Category Name'\n            type='email'\n            fullWidth\n            onChange={(e) => setCategory(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color='primary'>\n            Cancel\n          </Button>\n          <Button onClick={() => handleAddCategory()} color='primary'>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Grid\n        xs={12}\n        container\n        direction='row'\n        justify='space-between'\n        alignItems='flex-start'\n      >\n        <Grid\n          lg={2}\n          xs={12}\n          container\n          direction='column'\n          justify='space-between'\n          alignItems='flex-start'\n        >\n          {generateList()}\n        </Grid>\n        <Grid\n          lg={10}\n          xs={12}\n          container\n          direction='column'\n          justify='space-between'\n          alignItems='flex-start'\n        >\n          <Grid\n            xs={12}\n            container\n            direction='row'\n            justify='space-around'\n            alignItems='center'\n            style={{ marginBottom: 20 }}\n          >\n            {cards()}\n          </Grid>\n\n          <Grid item xs={12} container direction='row'>\n            <TableContainer style={{ marginRight: 15 }} component={Paper}>\n              <Table className={classes.table} aria-label='customized table'>\n                <TableHead>\n                  <TableRow>\n                    {keys.map((key) => {\n                      return (\n                        <StyledTableCell align='center' key={key}>\n                          {key}\n                        </StyledTableCell>\n                      );\n                    })}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <If condition={rowsS.length}>\n                    <Then>\n                      {rowsS.map((row) => (\n                        <StyledTableRow key={row.name}>\n                          <StyledTableCell\n                            align='center'\n                            component='th'\n                            scope='row'\n                          >\n                            {row.name}\n                          </StyledTableCell>\n                          <StyledTableCell align='center'>\n                            {row.role}\n                          </StyledTableCell>\n                          <StyledTableCell align='center'>\n                            {row.company}\n                          </StyledTableCell>\n                          <StyledTableCell align='center'>\n                            {row.address}\n                          </StyledTableCell>\n                          <StyledTableCell align='center'>\n                            {row.telephone}\n                          </StyledTableCell>\n                        </StyledTableRow>\n                      ))}\n                    </Then>\n                    <Else>\n                      <If condition={rowsB.length}>\n                        <Then>\n                          {rowsB.map((row) => (\n                            <StyledTableRow key={row.name}>\n                              <StyledTableCell\n                                align='center'\n                                component='th'\n                                scope='row'\n                              >\n                                {row.name}\n                              </StyledTableCell>\n                              <StyledTableCell align='center'>\n                                {row.role}\n                              </StyledTableCell>\n                              <StyledTableCell align='center'>\n                                {row.first_name}\n                              </StyledTableCell>\n                              <StyledTableCell align='center'>\n                                {row.last_name}\n                              </StyledTableCell>\n                              <StyledTableCell align='center'>\n                                {row.address}\n                              </StyledTableCell>\n                              <StyledTableCell align='center'>\n                                {row.telephone}\n                              </StyledTableCell>\n                              <StyledTableCell align='center'>\n                                {row.gender}\n                              </StyledTableCell>\n                              <StyledTableCell align='center'>\n                                {row.card_number}\n                              </StyledTableCell>\n                            </StyledTableRow>\n                          ))}\n                        </Then>\n                        <Else>\n                          <If condition={rowP.length}>\n                            <Then>\n                              {rowP.map((row) => (\n                                <StyledTableRow key={row.name}>\n                                  <StyledTableCell\n                                    align='center'\n                                    component='th'\n                                    scope='row'\n                                  >\n                                    {row.name}\n                                  </StyledTableCell>\n                                  <StyledTableCell align='center'>\n                                    {row.description}\n                                  </StyledTableCell>\n                                  <StyledTableCell align='center'>\n                                    <Avatar\n                                      alt='Product Image'\n                                      src={row.main_img}\n                                      className={classes.large}\n                                    />\n                                  </StyledTableCell>\n                                  <StyledTableCell align='center'>\n                                    {row.price} $\n                                  </StyledTableCell>\n                                  <StyledTableCell align='center'>\n                                    {row.category_name}\n                                  </StyledTableCell>\n                                  <StyledTableCell align='center'>\n                                    {row.company_name}\n                                  </StyledTableCell>\n                                </StyledTableRow>\n                              ))}\n                            </Then>\n                          </If>\n                        </Else>\n                      </If>\n                    </Else>\n                  </If>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  table: {\n    minWidth: 700\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7)\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n    marginRight: 5\n  },\n  list: {\n    padding: 5\n  }\n}));\n\n// Table Functions\nfunction createSData(name, role, company, address, telephone) {\n  return { name, role, company, address, telephone };\n}\n\nfunction createPData(\n  name,\n  description,\n  main_img,\n  price,\n  category_name,\n  company_name\n) {\n  return { name, description, main_img, price, category_name, company_name };\n}\n\nfunction createBData(\n  name,\n  role,\n  first_name,\n  last_name,\n  address,\n  telephone,\n  gender,\n  card_number\n) {\n  return {\n    name,\n    role,\n    first_name,\n    last_name,\n    address,\n    telephone,\n    gender,\n    card_number\n  };\n}\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\n\n// Cards function\n\nconst cards = () => {\n  return (\n    <>\n      <Card text='dark' bg='danger' style={{ width: '18rem' }}>\n        <Card.Body>\n          <Card.Title>Number Of users</Card.Title>\n          <Card.Text>\n            Some quick example text to build on the card title and make up the\n            bulk of the card's content.\n          </Card.Text>\n        </Card.Body>\n      </Card>\n\n      <Card text='dark' bg='warning' style={{ width: '18rem' }}>\n        <Card.Body>\n          <Card.Title>Number Of Products</Card.Title>\n          <Card.Text>\n            Some quick example text to build on the card title and make up the\n            bulk of the card's content.\n          </Card.Text>\n        </Card.Body>\n      </Card>\n\n      <Card text='dark' bg='info' style={{ width: '18rem' }}>\n        <Card.Body>\n          <Card.Title>Card Title</Card.Title>\n          <Card.Text>\n            Some quick example text to build on the card title and make up the\n            bulk of the card's content.\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    info: state.admin.information\n  };\n};\nconst mapDispatchToProps = {\n  allSellers,\n  allActiveSellers,\n  allDeActiveSellers,\n  allBuyers,\n  allActiveBuyers,\n  allDeActiveBuyers,\n  allProducts,\n  allDProducts,\n  allAProducts,\n  allBProducts,\n  allCProducts,\n  addCategory,\n  numberOfUsers\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Admin);\n","/home/ayako/ltuc/401/sportopia-front/src/components/products/products.js",[],"/home/ayako/ltuc/401/sportopia-front/src/reducers/actions.js",["154"],"import superagent from 'superagent';\n\nconst API_LINK_Bidding = 'https://sportopiav1.herokuapp.com/bidding';\n\nlet ua1 = superagent.agent();\n\nexport const getBiddingItems = () => {\n  return (dispatch) => {\n    return superagent.get(API_LINK_Bidding).then((res) => {\n      console.log(res);\n    });\n  };\n};\n\nexport const getInsideBid = (product_id) => {\n  console.log('inside the actions', product_id);\n  return (dispatch) => {\n    return superagent.get(`${API_LINK_Bidding}/${product_id}`).then((res) => {\n      let product = JSON.parse(res.text).product;\n      dispatch(enterRoom({ product }));\n    });\n  };\n};\n\nexport const getBid = (payload) => {\n  return {\n    type: 'GET_UNDER_BID',\n    payload: payload\n  };\n};\n\nexport const enterRoom = (payload) => {\n  return {\n    type: 'ENTER_ROOM',\n    payload: payload\n  };\n};\n","/home/ayako/ltuc/401/sportopia-front/src/reducers/categories-action.js",[],"/home/ayako/ltuc/401/sportopia-front/src/auth/auth.js",[],"/home/ayako/ltuc/401/sportopia-front/src/reducers/product-action .js",[],"/home/ayako/ltuc/401/sportopia-front/src/reducers/admin_actions.js",[],"/home/ayako/ltuc/401/sportopia-front/src/components/carousel/carousel.js",[],"/home/ayako/ltuc/401/sportopia-front/src/if/if.js",[],"/home/ayako/ltuc/401/sportopia-front/src/reducers/cart-action.js",[],"/home/ayako/ltuc/401/sportopia-front/src/components/cart/cart.js",["155","156","157","158"],"/home/ayako/ltuc/401/sportopia-front/src/reducers/cart-reducer.js",["159"],"let initialState = {\n    cartItem: [],\n    count: 0\n}\n\nexport default (state = initialState, action) => {\n    let { type, payload } = action;\n\n    switch (type) {\n        case 'GET-CART':\n\n            // console.log('payloaaaad--GET cart', payload)\n            // payload.forEach(element => {\n                // console.log('element >',element);\n                // if(state.cartItem.length < 3){\n                // state.cartItem.push(element)\n                // }\n            //   });\n            return {\n                cartItem: payload,\n                count: 0\n            }\n\n        case 'ADD-CART':\n\n         state.cartItem.push(payload);\n            return { ...state };\n\n        case 'REMOVE-CART':\n            state.cartItem.splice(payload, 1);\n            return {\n                cartItem: payload,\n                count: 0\n            };\n\n        default:\n            return state;\n    }\n}\n\n\n\n","/home/ayako/ltuc/401/sportopia-front/src/reducers/favorite-reducer.js",["160"],"let initialState = {\n    favoriteItem: [],\n    count: 0\n}\n\nexport default (state = initialState, action) => {\n    let { type, payload } = action;\n\n    switch (type) {\n        case 'GET-FAV':\n\n            // console.log('payloaaaad--GET cart', payload)\n            // payload.forEach(element => {\n                // console.log('element >',element);\n                // if(state.favoriteItem.length < 3){\n                // state.favoriteItem.push(element)\n                // }\n            //   });\n            return {\n                favoriteItem: payload,\n                count: 0\n            }\n\n        case 'ADD-FAV':\n\n         state.favoriteItem.push(payload);\n            return { ...state };\n\n        case 'REMOVE-FAV':\n            state.favoriteItem.splice(payload, 1);\n            return {\n                favoriteItem: payload,\n                count: 0\n            };\n\n        default:\n            return state;\n    }\n}\n\n\n\n","/home/ayako/ltuc/401/sportopia-front/src/components/favorite/favorite.js",["161","162","163"],"import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    getFavAPI,\n    updateRemoteCart,\n    removeFromFav\n} from '../../reducers/favorit-action';\n\nimport { Container, Grid, Card, CardContent, CardActions, Button, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    '@global': {\n        ul: {\n            margin: 0,\n            padding: 0,\n            listStyle: 'none',\n        },\n    },\n    appBar: {\n        borderBottom: `1px solid ${theme.palette.divider}`,\n    },\n    toolbarTitle: {\n        flex: 1,\n    },\n    fullHeight: {\n        height: \"100%\"\n    },\n    card: {\n        margin: '1em',\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%',\n        borderTopLeftRadius: '5px',\n        borderTopRightRadius: '5px'\n    },\n    grid2: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        flexWrap: 'initial'\n    },\n    jss5: {\n        padding: '64px 0px 48px'\n    },\n    grid1: {\n        paddingTop: '24px',\n        paddingBottom: '24px'\n    }\n}));\n\n\n\nconst Favorite  = props => {\nconsole.log('favvvvvvvv', props);\n    useEffect(() => {\n        props.getFavAPI();\n      }, []);\n\n    const classes = useStyles();\n    return (\n        <>\n            <Typography style={{ padding: '10px 0px 5px 10px' }} variant='h4' noWrap>\n                Favorite Items\n      </Typography>\n            {props.favoriteData.favoriteItem.map((item, idx) => {\n                console.log('props',props.favoriteData.favoriteItem[idx].is_deleted);\n                if (props.favoriteData.favoriteItem[idx].is_deleted === false) {\n                return (\n                    <>\n                        <Container key={idx} maxWidth=\"md\" component=\"main\">\n\n                            <Grid className={classes.grid1} container spacing={0} direction=\"row\" justify=\"center\" alignItems=\"center\">\n                                <Grid className={classes.grid2} container item xs={6} sm={6} lg={6} >\n                                    <Card key={idx} className={classes.card}>\n                                        <CardContent >\n                                            <Typography variant=\"h5\" color=\"textPrimary\">\n                                                {item.name}\n                                            </Typography>\n                                            <Typography variant=\"p\" color=\"textSecondary\">\n                                                category: {item.category}\n                                                <br />\n                                            price:  {item.price}\n                                            </Typography>\n                                        </CardContent>\n                                        <CardActions>\n                                            <Button key={idx} style={{ fontSize: '0.9rem' }} color=\"secondary\" onClick={() => removeFromFav(item.id)} >Remove</Button>\n                                        </CardActions>\n                                    </Card>\n                                </Grid>\n                            </Grid>\n                        </Container>\n\n                    </>\n                )\n                }\n            }\n\n            )}\n            \n\n        </>\n    )\n}\n\n\n\n\n// const mapStateToProps = state => ({\n//     // length: state.favoriteItem.length,\n//     favoriteData: state.favoriteData,\n// })\nconst mapStateToProps = (state) => {\n    // console.log('state inside cart', state);\n    return {\n        favoriteData: state.favoriteData,\n\n    };\n};\n\nconst mapDispatchToProps = {\n    getFavAPI,\n    removeFromFav,\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorite)\n","/home/ayako/ltuc/401/sportopia-front/src/reducers/favorit-action.js",[],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":7,"column":5,"nodeType":"170","messageId":"171","endLine":7,"endColumn":8},{"ruleId":"168","severity":1,"message":"172","line":3,"column":8,"nodeType":"170","messageId":"171","endLine":3,"endColumn":13},{"ruleId":"168","severity":1,"message":"173","line":4,"column":8,"nodeType":"170","messageId":"171","endLine":4,"endColumn":12},{"ruleId":"168","severity":1,"message":"174","line":6,"column":8,"nodeType":"170","messageId":"171","endLine":6,"endColumn":14},{"ruleId":"175","severity":1,"message":"176","line":43,"column":6,"nodeType":"177","endLine":43,"endColumn":8,"suggestions":"178"},{"ruleId":"168","severity":1,"message":"179","line":40,"column":23,"nodeType":"170","messageId":"171","endLine":40,"endColumn":37},{"ruleId":"168","severity":1,"message":"180","line":45,"column":10,"nodeType":"170","messageId":"171","endLine":45,"endColumn":16},{"ruleId":"168","severity":1,"message":"181","line":45,"column":18,"nodeType":"170","messageId":"171","endLine":45,"endColumn":31},{"ruleId":"168","severity":1,"message":"182","line":32,"column":8,"nodeType":"170","messageId":"171","endLine":32,"endColumn":25},{"ruleId":"168","severity":1,"message":"183","line":92,"column":5,"nodeType":"170","messageId":"171","endLine":92,"endColumn":19},{"ruleId":"168","severity":1,"message":"184","line":172,"column":9,"nodeType":"170","messageId":"171","endLine":172,"endColumn":30},{"ruleId":"168","severity":1,"message":"185","line":190,"column":9,"nodeType":"170","messageId":"171","endLine":190,"endColumn":19},{"ruleId":"168","severity":1,"message":"186","line":14,"column":10,"nodeType":"170","messageId":"171","endLine":14,"endColumn":15},{"ruleId":"168","severity":1,"message":"187","line":26,"column":13,"nodeType":"170","messageId":"171","endLine":26,"endColumn":21},{"ruleId":"168","severity":1,"message":"188","line":2,"column":17,"nodeType":"170","messageId":"171","endLine":2,"endColumn":27},{"ruleId":"168","severity":1,"message":"189","line":3,"column":10,"nodeType":"170","messageId":"171","endLine":3,"endColumn":22},{"ruleId":"168","severity":1,"message":"190","line":7,"column":16,"nodeType":"170","messageId":"171","endLine":7,"endColumn":19},{"ruleId":"168","severity":1,"message":"191","line":7,"column":21,"nodeType":"170","messageId":"171","endLine":7,"endColumn":24},{"ruleId":"168","severity":1,"message":"192","line":166,"column":9,"nodeType":"170","messageId":"171","endLine":166,"endColumn":26},{"ruleId":"168","severity":1,"message":"193","line":5,"column":5,"nodeType":"170","messageId":"171","endLine":5,"endColumn":8},{"ruleId":"168","severity":1,"message":"194","line":6,"column":5,"nodeType":"170","messageId":"171","endLine":6,"endColumn":21},{"ruleId":"168","severity":1,"message":"195","line":10,"column":10,"nodeType":"170","messageId":"171","endLine":10,"endColumn":25},{"ruleId":"175","severity":1,"message":"176","line":69,"column":8,"nodeType":"177","endLine":69,"endColumn":10,"suggestions":"196"},{"ruleId":"197","severity":1,"message":"198","line":79,"column":54,"nodeType":"199","messageId":"200","endLine":79,"endColumn":56},{"ruleId":"201","severity":1,"message":"202","line":6,"column":1,"nodeType":"203","endLine":39,"endColumn":2},{"ruleId":"201","severity":1,"message":"202","line":6,"column":1,"nodeType":"203","endLine":39,"endColumn":2},{"ruleId":"168","severity":1,"message":"194","line":6,"column":5,"nodeType":"170","messageId":"171","endLine":6,"endColumn":21},{"ruleId":"175","severity":1,"message":"176","line":62,"column":10,"nodeType":"177","endLine":62,"endColumn":12,"suggestions":"204"},{"ruleId":"197","severity":1,"message":"198","line":70,"column":62,"nodeType":"199","messageId":"200","endLine":70,"endColumn":64},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"no-unused-vars","'cId' is assigned a value but never used.","Identifier","unusedVar","'Paper' is defined but never used.","'Grid' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["207"],"'setComapnyName' is assigned a value but never used.","'logged' is assigned a value but never used.","'setLoginState' is assigned a value but never used.","'NotificationsIcon' is defined but never used.","'notDeletedCart' is assigned a value but never used.","'handleProfileMenuOpen' is assigned a value but never used.","'renderMenu' is assigned a value but never used.","'token' is assigned a value but never used.","'response' is assigned a value but never used.","'useContext' is defined but never used.","'StateContext' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'handleFavProducts' is assigned a value but never used.","'ua1' is assigned a value but never used.","'updateRemoteCart' is defined but never used.","'decreaseInStock' is defined but never used.",["208"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["209"],"no-global-assign","no-unsafe-negation",{"desc":"210","fix":"211"},{"desc":"210","fix":"212"},{"desc":"210","fix":"213"},"Update the dependencies array to be: [props]",{"range":"214","text":"215"},{"range":"216","text":"215"},{"range":"217","text":"215"},[1423,1425],"[props]",[1418,1420],[1264,1266]]