[{"/home/rawad/ltuc/projct/sportopia/src/index.js":"1","/home/rawad/ltuc/projct/sportopia/src/reportWebVitals.js":"2","/home/rawad/ltuc/projct/sportopia/src/App.js":"3","/home/rawad/ltuc/projct/sportopia/src/store/index.js":"4","/home/rawad/ltuc/projct/sportopia/src/context/global-state.js":"5","/home/rawad/ltuc/projct/sportopia/src/components/bidding/bidding-main.js":"6","/home/rawad/ltuc/projct/sportopia/src/components/bidding/bidding-room.js":"7","/home/rawad/ltuc/projct/sportopia/src/reducers/bidding.js":"8","/home/rawad/ltuc/projct/sportopia/src/components/products/products.js":"9","/home/rawad/ltuc/projct/sportopia/src/components/carousel/carousel.js":"10","/home/rawad/ltuc/projct/sportopia/src/components/header/header.js":"11","/home/rawad/ltuc/projct/sportopia/src/reducers/actions.js":"12","/home/rawad/ltuc/projct/sportopia/src/reducers/categories-action.js":"13","/home/rawad/ltuc/projct/sportopia/src/reducers/categories-reducer.js":"14","/home/rawad/ltuc/projct/sportopia/src/reducers/products-reducer.js":"15","/home/rawad/ltuc/projct/sportopia/src/reducers/product-action .js":"16","/home/rawad/ltuc/projct/sportopia/src/components/signin.js":"17","/home/rawad/ltuc/projct/sportopia/src/auth/auth.js":"18","/home/rawad/ltuc/projct/sportopia/src/components/admin/index.js":"19","/home/rawad/ltuc/projct/sportopia/src/reducers/admin_reducer.js":"20","/home/rawad/ltuc/projct/sportopia/src/reducers/admin_actions.js":"21","/home/rawad/ltuc/projct/sportopia/src/if/if.js":"22"},{"size":746,"mtime":1607734524690,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1607512609330,"results":"25","hashOfConfig":"24"},{"size":915,"mtime":1607733416650,"results":"26","hashOfConfig":"24"},{"size":486,"mtime":1607698365930,"results":"27","hashOfConfig":"24"},{"size":2923,"mtime":1607736589000,"results":"28","hashOfConfig":"24"},{"size":4145,"mtime":1607708544390,"results":"29","hashOfConfig":"24"},{"size":2307,"mtime":1607693858680,"results":"30","hashOfConfig":"24"},{"size":581,"mtime":1607693846970,"results":"31","hashOfConfig":"24"},{"size":3545,"mtime":1607733394280,"results":"32","hashOfConfig":"24"},{"size":2261,"mtime":1607693846900,"results":"33","hashOfConfig":"24"},{"size":11983,"mtime":1607693858680,"results":"34","hashOfConfig":"24"},{"size":820,"mtime":1607693858690,"results":"35","hashOfConfig":"24"},{"size":492,"mtime":1607693858690,"results":"36","hashOfConfig":"24"},{"size":289,"mtime":1607693858690,"results":"37","hashOfConfig":"24"},{"size":287,"mtime":1607693858690,"results":"38","hashOfConfig":"24"},{"size":444,"mtime":1607693858690,"results":"39","hashOfConfig":"24"},{"size":20004,"mtime":1607693858690,"results":"40","hashOfConfig":"24"},{"size":561,"mtime":1607726113620,"results":"41","hashOfConfig":"24"},{"size":14314,"mtime":1607742348300,"results":"42","hashOfConfig":"24"},{"size":1189,"mtime":1607713158590,"results":"43","hashOfConfig":"24"},{"size":5036,"mtime":1607742402910,"results":"44","hashOfConfig":"24"},{"size":455,"mtime":1607711969090,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1cpeh8c",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/home/rawad/ltuc/projct/sportopia/src/index.js",[],["98","99"],"/home/rawad/ltuc/projct/sportopia/src/reportWebVitals.js",[],"/home/rawad/ltuc/projct/sportopia/src/App.js",["100"],"// Importing\nimport BiddingMain from './components/bidding/bidding-main';\nimport BiddingRoom from './components/bidding/bidding-room';\nimport { Route, Switch, Router } from 'react-router-dom';\nimport GlobalState from './context/global-state';\nimport Header from './components/header/header';\nimport Products from './components/products/products';\nimport SignIn from './components/signin';\nimport Admin from './components/admin/index';\n// Component\n\nfunction App() {\n  return (\n    <>\n      <GlobalState>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={Products} />\n          <Route exact path='/register' component={SignIn} />\n          <Route exact path='/bidding' component={BiddingMain} />\n          <Route path='/bidding/:id' component={BiddingRoom} />\n          <Route path='/admin' component={Admin} />\n        </Switch>\n      </GlobalState>\n    </>\n  );\n}\n\nexport default App;\n","/home/rawad/ltuc/projct/sportopia/src/store/index.js",[],"/home/rawad/ltuc/projct/sportopia/src/context/global-state.js",["101","102"],"import React, { useState } from 'react';\nimport superagent from 'superagent';\nimport jwt from 'jsonwebtoken';\nimport cookie from 'react-cookies';\n\nexport const StateContext = React.createContext();\nconst JWT_SECRET = 'thebestsecrett';\n\nconst API_LINK = 'https://sportopiav1.herokuapp.com';\n\nexport default function GlobalState(props) {\n  // State\n  const [isLogged, setIsLogged] = useState(false);\n  const [token, setToken] = useState('');\n  const [user, setUser] = useState({});\n  const [productId, setProductId] = useState('');\n  const [productIdBidding, setProductIdBidding] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Functions\n\n  const login = async (username, password) => {\n    let ua1 = superagent.agent();\n    try {\n      const response = await ua1\n        .post(`${API_LINK}/signin`)\n        .set('authorization', `Basic ${btoa(`${username}:${password}`)}`)\n        .end(function (err, res) {\n          // console.log(res);\n          try {\n            let token = JSON.parse(res.text);\n            validateToken(token);\n          } catch (error) {\n            setError(res.text);\n          }\n        });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const validateToken = (token) => {\n    try {\n      token = token.token;\n      console.log(token);\n      let user = jwt.verify(token, JWT_SECRET);\n      cookie.save('token', token, { path: '/', maxAge: 2592000 });\n      cookie.save('user', user.user_id, { path: '/', maxAge: 2592000 });\n      setLoginState(true, token, user);\n    } catch (e) {\n      setError('Wrong password or username');\n      setLoginState(false, null, {});\n    }\n  };\n\n  const register = async (obj) => {\n    try {\n      const response = await superagent.post(`${API_LINK}/signup`).send(obj);\n      console.log(response);\n      if (response.body.message === 'This username already used') {\n        setError(response.body.message);\n      } else {\n        if (obj.role === 'seller') {\n          setSuccess(\n            'Your registered as a Seller, Please wait 1-2 days to be activated'\n          );\n        } else {\n          setSuccess(\n            'You have registered as a Buyer Please sign with you account!!'\n          );\n        }\n      }\n    } catch (error) {\n      setError(\n        'Something Went Bad, Please try again later!! Thank you for understanding'\n      );\n    }\n  };\n\n  const setLoginState = (loggedIn, token, user) => {\n    console.log('inside the state', user);\n    setIsLogged(loggedIn);\n    setToken(token);\n    setUser(user);\n  };\n\n  const state = {\n    isLogged,\n    setIsLogged,\n    user,\n    setUser,\n    productId,\n    setProductId,\n    productIdBidding,\n    setProductIdBidding,\n    login,\n    register,\n    error,\n    success,\n    setSuccess,\n    setError\n  };\n  return (\n    <StateContext.Provider value={state}>\n      {props.children}\n    </StateContext.Provider>\n  );\n}\n","/home/rawad/ltuc/projct/sportopia/src/components/bidding/bidding-main.js",["103"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect, useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getBiddingItems } from '../../reducers/actions';\nimport { StateContext } from '../../context/global-state';\nimport { NavLink, Link } from 'react-router-dom';\nimport {\n  Card,\n  CardMedia,\n  CardActionArea,\n  Button,\n  CardContent,\n  CardActions,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Slide,\n  Typography,\n  Grid\n} from '@material-ui/core';\n\nexport function BiddingMain(props) {\n  const classes = useStyles();\n\n  // Context\n  const { setProductIdBidding } = useContext(StateContext);\n  //   States\n  const [open, setOpen] = useState(false);\n\n  // Functions\n  useEffect(() => {\n    props.getBiddingItems();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // Save the product id in the cookies\n  const saveProductId = (p_id) => {\n    setProductIdBidding(p_id);\n  };\n\n  return (\n    <div className={classes.container}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6} md={4} lg={3}>\n          <Card className={classes.root}>\n            <CardActionArea>\n              <CardMedia\n                className={classes.media}\n                image='https://cdn.shopify.com/s/files/1/0051/4802/products/Small_Octocat_500x.png?v=1571377850'\n                title='Contemplative Reptile'\n              />\n              <CardContent>\n                <Typography gutterBottom variant='h5' component='h2'>\n                  Lizard\n                </Typography>\n                <Typography variant='body2' color='textSecondary' component='p'>\n                  Lizards are a widespread group of squamate reptiles, with over\n                  6,000 species, ranging across all continents except Antarctica\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Link to={() => `/bidding/${1}`}>\n                <Button\n                  onClick={() => saveProductId(2)}\n                  size='small'\n                  color='primary'\n                >\n                  Enter Bidding Room\n                </Button>\n              </Link>\n              <Button onClick={handleClickOpen} size='small' color='primary'>\n                Learn More\n              </Button>\n            </CardActions>\n          </Card>\n          <Dialog\n            open={open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={handleClose}\n            aria-labelledby='alert-dialog-slide-title'\n            aria-describedby='alert-dialog-slide-description'\n          >\n            <DialogTitle id='alert-dialog-slide-title'>\n              {\"Use Google's location service?\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText id='alert-dialog-slide-description'>\n                Let Google help apps determine location. This means sending\n                anonymous location data to Google, even when no apps are\n                running.\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} color='primary'>\n                OK!\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    flexGrow: 1,\n    display: 'flex',\n    alignItems: 'space-between'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center'\n  },\n\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 250\n  }\n}));\n\n// Functions\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction='up' ref={ref} {...props} />;\n});\n\nconst mapStateToProps = (state) => {\n  return {\n    products: state.bidding.biddingProducts\n  };\n};\n\nconst mapDispatchToProps = { getBiddingItems };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BiddingMain);\n","/home/rawad/ltuc/projct/sportopia/src/components/bidding/bidding-room.js",["104"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Container } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { getInsideBid } from '../../reducers/actions';\nimport { StateContext } from '../../context/global-state';\nimport SwiftSlider from 'react-swift-slider';\n\nconst data = [\n  {\n    id: '1',\n    src:\n      'https://media.mfbproject.co.za/repos/2017_alfa-romeo_stelvio_leaked_02.jpg'\n  },\n  {\n    id: '2',\n    src:\n      'https://media.mfbproject.co.za/repos/2017_alfa_romeo_stelvioquadrifoglio_official_09.jpg'\n  },\n  {\n    id: '3',\n    src:\n      'https://media.mfbproject.co.za/repos/2018-alfa-romeo-stelvio-quadrifoglio-specs-photos-speed-2.jpg'\n  },\n  {\n    id: '4',\n    src:\n      'https://media.mfbproject.co.za/repos/alfa-romeo-giulia-quadrifoglio-2017-us-wallpapers-and-hd-images-13.jpg'\n  },\n  {\n    id: '5',\n    src:\n      'https://media.mfbproject.co.za/repos/ARWP_Infra_Desk_1920_1080_Quad.png'\n  }\n];\n\nexport function BiddingRoom(props) {\n  console.log('props inside the biiding room', props.productUB);\n  // Context\n  const { productIdBidding } = useContext(StateContext);\n\n  // State\n\n  // Functions\n\n  useEffect(() => {\n    props.getInsideBid(productIdBidding);\n  }, []);\n\n  // useEffect(() => {\n  //   data.push({\n  //     id: 0,\n  //     src: props.productUB.main_img\n  //   });\n  //   props.productUB.images.forEach((image, index) => {\n  //     data.push({\n  //       id: index + 1,\n  //       src: image\n  //     });\n  //   });\n  // }, [props]);\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth='sm'>\n        <SwiftSlider\n          data={data}\n          interval={3000}\n          showDots={false}\n          enableNextAndPrev={false}\n        />\n      </Container>\n    </React.Fragment>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    flexGrow: 1,\n    display: 'flex',\n    alignItems: 'space-between'\n  }\n}));\n\nconst mapStateToProps = (state) => {\n  console.log('state inside the room', state);\n  return {\n    productUB: state.bidding.biddingRoom\n  };\n};\n\nconst mapDispatchToProps = { getInsideBid };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BiddingRoom);\n","/home/rawad/ltuc/projct/sportopia/src/reducers/bidding.js",[],"/home/rawad/ltuc/projct/sportopia/src/components/products/products.js",[],"/home/rawad/ltuc/projct/sportopia/src/components/carousel/carousel.js",[],"/home/rawad/ltuc/projct/sportopia/src/components/header/header.js",["105","106"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { getRemoteData } from '../../reducers/categories-action';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport {\n  List,\n  Divider,\n  Drawer,\n  ListItem,\n  ListItemText,\n  Fab,\n  Tooltip,\n  Zoom,\n  Menu,\n  MenuItem,\n  Badge,\n  InputBase,\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Button\n} from '@material-ui/core';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\nimport GavelRoundedIcon from '@material-ui/icons/GavelRounded';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport PropTypes from 'prop-types';\nimport ShoppingCartRoundedIcon from '@material-ui/icons/ShoppingCartRounded';\nimport avatar from './avatar.gif';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Auth from '../../auth/auth';\n\nfunction ScrollTop(props) {\n  const { children, window } = props;\n  const classes = useStyles();\n\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100\n  });\n\n  const handleClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      '#back-to-top-anchor'\n    );\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }\n  };\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role='presentation' className={classes.root}>\n        {children}\n      </div>\n    </Zoom>\n  );\n}\nScrollTop.propTypes = {\n  children: PropTypes.element.isRequired,\n  window: PropTypes.func\n};\n\nfunction Header(props) {\n  useEffect(() => {\n    props.getRemoteData();\n  }, []);\n\n  const classes = useStyles();\n  // start of drawer\n  const [state, setState] = React.useState(false);\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event.type === 'keydown' &&\n      (event.key === 'Tab' || event.key === 'Shift')\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      // style={{backgroundColor: '#6BAB90', height: '100%', color:'E1F0C4' }}\n      className={classes.list}\n      role='presentation'\n      onClick={toggleDrawer(anchor, false)}\n    >\n      <Typography style={{ padding: '10px 0px 5px 10px' }} variant='h4' noWrap>\n        Categories\n      </Typography>\n      <Divider />\n      <List>\n        {props.categories.map((text, index) => (\n          <>\n            <ListItem button key={text.category_name}>\n              <ListItemAvatar>\n                <Avatar alt='Cindy Baker' src={avatar} />\n              </ListItemAvatar>\n              <ListItemText primary={text.category_name} />\n            </ListItem>\n            <Divider />\n          </>\n        ))}\n      </List>\n    </div>\n  );\n  // end of drawer\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  // const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  // const renderMenu = (\n  //   <Menu\n  //     anchorEl={anchorEl}\n  //     anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n  //     id={menuId}\n  //     keepMounted\n  //     transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n  //     open={isMenuOpen}\n  //     onClose={handleMenuClose}\n  //   >\n  //     <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n  //     <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n  //   </Menu>\n  // );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label='show 4 new mails' color='inherit'>\n          <Badge badgeContent={0} color='secondary'>\n            <FavoriteRoundedIcon />\n          </Badge>\n        </IconButton>\n        <p>My Favorite</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label='show 11 new notifications' color='inherit'>\n          <Badge badgeContent={11} color='secondary'>\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label='account of current user'\n          aria-controls='primary-search-account-menu'\n          aria-haspopup='true'\n          color='inherit'\n        >\n          <PersonRoundedIcon />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar style={{ backgroundColor: '#157A6E' }} position='static'>\n        <Toolbar>\n          {/* ..................................burger view ......................................... */}\n\n          <IconButton\n            edge='start'\n            className={classes.menuButton}\n            color='inherit'\n            aria-label='open drawer'\n            onClick={toggleDrawer('left', true)}\n          >\n            <MenuIcon></MenuIcon>\n          </IconButton>\n          <Typography className={classes.title} variant='h6' noWrap>\n            Sportopia\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder='Search…'\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div>\n            <React.Fragment key={'left'}>\n              <Drawer\n                anchor='left'\n                open={state['left']}\n                onClose={toggleDrawer('left', false)}\n              >\n                {list('left')}\n              </Drawer>\n            </React.Fragment>\n          </div>\n\n          {/* ................................icons on nav bar .................................... */}\n          <div className={classes.sectionDesktop}>\n            <Button color='inherit'>Sell</Button>\n            <Auth role={'admin'}>\n              <NavLink color='inherit' to='/admin'>\n                Admin\n              </NavLink>\n            </Auth>\n\n            <Tooltip\n              placement='top'\n              arrow\n              TransitionComponent={Zoom}\n              title='bids list'\n            >\n              <IconButton\n                aria-label='show 17 new notifications'\n                color='inherit'\n              >\n                <Badge badgeContent={17} color='secondary'>\n                  <GavelRoundedIcon />\n                </Badge>\n              </IconButton>\n            </Tooltip>\n            <Tooltip\n              placement='top'\n              arrow\n              TransitionComponent={Zoom}\n              title='My Favorite'\n            >\n              <IconButton aria-label='show 4 new mails' color='inherit'>\n                <Badge badgeContent={0} color='secondary'>\n                  <FavoriteRoundedIcon />\n                </Badge>\n              </IconButton>\n            </Tooltip>\n            <Tooltip\n              placement='top'\n              arrow\n              TransitionComponent={Zoom}\n              title='My Cart'\n            >\n              <IconButton aria-label='show 4 new mails' color='inherit'>\n                <Badge badgeContent={0} color='secondary'>\n                  <ShoppingCartRoundedIcon />\n                </Badge>\n              </IconButton>\n            </Tooltip>\n            <Tooltip\n              placement='top'\n              arrow\n              TransitionComponent={Zoom}\n              title='sign in / up'\n            >\n              <NavLink to='/register'>\n                <IconButton\n                  edge='end'\n                  aria-label='account of current user'\n                  aria-controls={menuId}\n                  aria-haspopup='true'\n                  onClick={handleProfileMenuOpen}\n                  color='inherit'\n                >\n                  <PersonRoundedIcon />\n                </IconButton>\n              </NavLink>\n            </Tooltip>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label='show more'\n              aria-controls={mobileMenuId}\n              aria-haspopup='true'\n              onClick={handleMobileMenuOpen}\n              color='inherit'\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Toolbar id='back-to-top-anchor' />\n\n      {renderMobileMenu}\n      {/* {renderMenu} */}\n      <ScrollTop {...props}>\n        <Fab\n          style={{ backgroundColor: '#157A6E' }}\n          size='small'\n          aria-label='scroll back to top'\n        >\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </ScrollTop>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch'\n    }\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex'\n    }\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none'\n    }\n  },\n  root: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2)\n  },\n  list: {\n    width: 250,\n    backgroundColor: '#6BAB90',\n    height: '100%',\n    color: 'E1F0C4',\n    borderBottom: '1px solid black'\n  },\n  fullList: {\n    width: 'auto'\n  }\n}));\n\nconst mapStateToProps = (state) => {\n  return {\n    categories: state.categories.results\n  };\n};\nconst mapDispatchToProps = { getRemoteData };\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","/home/rawad/ltuc/projct/sportopia/src/reducers/actions.js",["107"],"import superagent from 'superagent';\n\nconst API_LINK_Bidding = 'https://sportopiav1.herokuapp.com/bidding';\n\nlet ua1 = superagent.agent();\n\nexport const getBiddingItems = () => {\n  return (dispatch) => {\n    return superagent.get(API_LINK_Bidding).then((res) => {\n      console.log(res);\n    });\n  };\n};\n\nexport const getInsideBid = (product_id) => {\n  console.log('inside the actions', product_id);\n  return (dispatch) => {\n    return superagent.get(`${API_LINK_Bidding}/${product_id}`).then((res) => {\n      let product = JSON.parse(res.text).product;\n      dispatch(enterRoom({ product }));\n    });\n  };\n};\n\nexport const getBid = (payload) => {\n  return {\n    type: 'GET_UNDER_BID',\n    payload: payload\n  };\n};\n\nexport const enterRoom = (payload) => {\n  return {\n    type: 'ENTER_ROOM',\n    payload: payload\n  };\n};\n","/home/rawad/ltuc/projct/sportopia/src/reducers/categories-action.js",[],"/home/rawad/ltuc/projct/sportopia/src/reducers/categories-reducer.js",[],"/home/rawad/ltuc/projct/sportopia/src/reducers/products-reducer.js",[],"/home/rawad/ltuc/projct/sportopia/src/reducers/product-action .js",[],"/home/rawad/ltuc/projct/sportopia/src/components/signin.js",["108","109","110"],"import React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  Button,\n  CssBaseline,\n  TextField,\n  Grid,\n  Box,\n  Link,\n  Typography,\n  Container,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Radio,\n  RadioGroup,\n  FormControlLabel\n} from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport LockOpenOutlinedIcon from '@material-ui/icons/LockOpenOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login';\nimport { StateContext } from '../context/global-state';\n\nexport default function SignIn() {\n  // ContextState\n\n  const stateContext = useContext(StateContext);\n  const history = useHistory();\n\n  // States\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [address, setAddress] = useState('');\n  const [telephone, setTelephone] = useState('');\n  const [companyName, setComapnyName] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [gender, setGender] = useState('');\n\n  const [logged, setLoginState] = useState(false);\n  const [register, setRegister] = useState(false);\n  const [registerBuyer, setRegisterBuyer] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  // Functions\n\n  const classes = useStyles();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const responseGoogle = (response) => {\n    console.log(response);\n  };\n  const responseFacebook = (response) => {\n    console.log(response);\n  };\n\n  async function handleSignIn(event) {\n    event.preventDefault();\n    stateContext.login(username, password);\n    if (!stateContext.error) history.push('/');\n  }\n  async function handleSignUp(event, role) {\n    event.preventDefault();\n    const objBody = {\n      username: username,\n      password: password,\n      role: role,\n      companyname: companyName,\n      firstname: firstName,\n      lastname: lastName,\n      adress: address,\n      gender: gender,\n      telephone: telephone\n    };\n    stateContext.register(objBody);\n  }\n\n  return (\n    <>\n      <Container component='main' maxWidth='xs'>\n        {register ? (\n          <Card>\n            <CardContent>\n              <CssBaseline />\n              <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                  <LockOutlinedIcon />\n                </Avatar>\n                <Typography component='h1' variant='h4'>\n                  Sign Up\n                </Typography>\n                <Link\n                  component='button'\n                  onClick={() => {\n                    setRegister(!register);\n                  }}\n                  style={{ marginBottom: '0%', marginTop: '5%' }}\n                >\n                  Existing User? Sign In here!\n                </Link>\n\n                <form className={classes.form}>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                      <Button\n                        style={{ minHeight: 50 }}\n                        type='button'\n                        fullWidth\n                        variant='contained'\n                        color='secondary'\n                        className={classes.submit}\n                        onClick={() => {\n                          setRegisterBuyer(true);\n                          handleClickOpen();\n                        }}\n                      >\n                        Buyer\n                      </Button>\n                    </Grid>\n                    <Dialog\n                      open={open}\n                      onClose={handleClose}\n                      aria-labelledby='form-dialog-title'\n                    >\n                      <DialogTitle id='form-dialog-title'>\n                        {registerBuyer\n                          ? 'Sign Up as a Buyer'\n                          : 'Sign Up as a Seller'}\n                      </DialogTitle>\n                      <DialogContent>\n                        {registerBuyer ? (\n                          <form className={classes.form}>\n                            <Grid\n                              container\n                              spacing={1}\n                              style={{\n                                marginBottom: 20\n                              }}\n                            >\n                              <Grid item xs={2} sm={2.7}></Grid>\n                              <Grid item xs={1} sm={5}>\n                                <GoogleLogin\n                                  clientId='1017961095121-u3na2ktuf9i8m0s7ndq0l9ishqpsbfst.apps.googleusercontent.com'\n                                  buttonText='Signup'\n                                  onSuccess={responseGoogle}\n                                  onFailure={responseGoogle}\n                                  cookiePolicy={'single_host_origin'}\n                                  style={{\n                                    borderRightWidth: 1,\n                                    borderRightColor: 'black'\n                                  }}\n                                />\n                              </Grid>\n                              <Grid item xs={1} sm={4}>\n                                <FacebookLogin\n                                  appId='562118384400275'\n                                  fields='name,username,picture'\n                                  scope='public_profile,user_friends'\n                                  callback={responseFacebook}\n                                  icon='fa-facebook'\n                                  textButton='SignUp'\n                                  size='small'\n                                />\n                              </Grid>\n                            </Grid>\n                            <Grid container spacing={2}>\n                              <Grid item xs={12} sm={6}>\n                                <TextField\n                                  name='userName'\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  id='userName'\n                                  label='User Name'\n                                  onChange={(e) => setUsername(e.target.value)}\n                                  autoFocus\n                                />\n                              </Grid>\n                              <Grid item xs={12} sm={6}>\n                                <TextField\n                                  type='password'\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  onChange={(e) => setPassword(e.target.value)}\n                                  id='password'\n                                  label='Password'\n                                  name='password'\n                                />\n                              </Grid>\n                              <Grid item xs={12} sm={6}>\n                                <TextField\n                                  name='firstName'\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  id='firstName'\n                                  label='First Name'\n                                  onChange={(e) => setFirstName(e.target.value)}\n                                  autoFocus\n                                />\n                              </Grid>\n                              <Grid item xs={2} sm={6}>\n                                <TextField\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  onChange={(e) => setLastName(e.target.value)}\n                                  id='lastName'\n                                  label='Last Name'\n                                  name='lastName'\n                                />\n                              </Grid>\n                              <Grid item xs={2} sm={12}>\n                                <TextField\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  onChange={(e) => setAddress(e.target.value)}\n                                  id='address'\n                                  label='Address'\n                                  name='address'\n                                />\n                              </Grid>\n                              <Grid item xs={2} sm={8}>\n                                <RadioGroup\n                                  row\n                                  aria-label='gender'\n                                  name='gender1'\n                                  value={gender}\n                                  onChange={(e) => setGender(e.target.value)}\n                                >\n                                  <FormControlLabel\n                                    value='female'\n                                    control={<Radio />}\n                                    label='Female'\n                                  />\n                                  <FormControlLabel\n                                    value='male'\n                                    control={<Radio />}\n                                    label='Male'\n                                  />\n                                  <FormControlLabel\n                                    value='other'\n                                    control={<Radio />}\n                                    label='Other'\n                                  />\n                                </RadioGroup>\n                              </Grid>\n                              <Grid item xs={2} sm={4}>\n                                <TextField\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  onChange={(e) => setTelephone(e.target.value)}\n                                  id='telephone'\n                                  label='Telephone'\n                                  name='telephone'\n                                />\n                              </Grid>\n                            </Grid>\n                            <Button\n                              type='submit'\n                              fullWidth\n                              variant='contained'\n                              color='primary'\n                              className={classes.submit}\n                              onClick={(event) => handleSignUp(event, 'buyer')}\n                            >\n                              Sign Up\n                            </Button>\n                            <Typography\n                              style={{ fontSize: 15 }}\n                              component='h5'\n                              variant='h5'\n                            >\n                              {stateContext.success\n                                ? stateContext.success\n                                : stateContext.error}\n                            </Typography>\n                          </form>\n                        ) : (\n                          <form className={classes.form}>\n                            <Grid container spacing={2}>\n                              <Grid item xs={12} sm={6}>\n                                <TextField\n                                  name='userName'\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  id='userName'\n                                  label='User Name'\n                                  onChange={(e) => setUsername(e.target.value)}\n                                  autoFocus\n                                />\n                              </Grid>\n                              <Grid item xs={12} sm={6}>\n                                <TextField\n                                  type='password'\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  onChange={(e) => setPassword(e.target.value)}\n                                  id='password'\n                                  label='Password'\n                                  name='password'\n                                />\n                              </Grid>\n                              <Grid item xs={12} sm={6}>\n                                <TextField\n                                  name='companyName'\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  id='companyName'\n                                  label='Company Name'\n                                  onChange={(e) => setFirstName(e.target.value)}\n                                  autoFocus\n                                />\n                              </Grid>\n                              <Grid item xs={2} sm={6}>\n                                <TextField\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  onChange={(e) => setTelephone(e.target.value)}\n                                  id='telephone'\n                                  label='Telephone'\n                                  name='telephone'\n                                />\n                              </Grid>\n                              <Grid item xs={2} sm={12}>\n                                <TextField\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  onChange={(e) => setAddress(e.target.value)}\n                                  id='address'\n                                  label='Address'\n                                  name='address'\n                                />\n                              </Grid>\n                            </Grid>\n                            <Button\n                              type='submit'\n                              fullWidth\n                              variant='contained'\n                              color='primary'\n                              className={classes.submit}\n                              onClick={(event) => handleSignUp(event, 'seller')}\n                            >\n                              Sign Up\n                            </Button>\n                          </form>\n                        )}\n                      </DialogContent>\n                    </Dialog>\n                    <Grid item xs={12} sm={6}>\n                      <Button\n                        style={{ minHeight: 50 }}\n                        type='button'\n                        fullWidth\n                        variant='contained'\n                        color='secondary'\n                        className={classes.submit}\n                        onClick={() => {\n                          setRegisterBuyer(false);\n                          handleClickOpen();\n                        }}\n                      >\n                        Seller\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </form>\n              </div>\n              <Box mt={5}></Box>\n            </CardContent>\n          </Card>\n        ) : (\n          <Card>\n            <CardContent>\n              <CssBaseline />\n              <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                  <LockOpenOutlinedIcon />\n                </Avatar>\n                <Typography component='h1' variant='h4'>\n                  Sign In\n                </Typography>\n                <Link\n                  component='button'\n                  onClick={() => {\n                    setRegister(true);\n                  }}\n                  style={{ marginBottom: '10%', marginTop: '5%' }}\n                >\n                  New User? Sign up here!\n                </Link>\n                <Grid container spacing={1}>\n                  <Grid item xs={2} sm={2.7}></Grid>\n                  <Grid item xs={1} sm={5}>\n                    <GoogleLogin\n                      clientId='1017961095121-u3na2ktuf9i8m0s7ndq0l9ishqpsbfst.apps.googleusercontent.com'\n                      buttonText='Login'\n                      onSuccess={responseGoogle}\n                      onFailure={responseGoogle}\n                      cookiePolicy={'single_host_origin'}\n                    />\n                  </Grid>\n                  <Grid item xs={1} sm={4}>\n                    <FacebookLogin\n                      appId='562118384400275'\n                      fields='name,username,picture'\n                      scope='public_profile,user_friends'\n                      callback={responseFacebook}\n                      icon='fa-facebook'\n                      textButton='Login'\n                      size='small'\n                    />\n                  </Grid>\n                </Grid>\n                <Typography component='h1' variant='h5'>\n                  Or\n                </Typography>\n                <form className={classes.form}>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                      <TextField\n                        name='userName'\n                        variant='outlined'\n                        required\n                        fullWidth\n                        id='userName'\n                        label='User Name'\n                        onChange={(e) => setUsername(e.target.value)}\n                        autoFocus\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <TextField\n                        type='password'\n                        variant='outlined'\n                        required\n                        fullWidth\n                        onChange={(e) => setPassword(e.target.value)}\n                        id='password'\n                        label='Password'\n                        name='password'\n                      />\n                    </Grid>\n                  </Grid>\n                  <Button\n                    type='submit'\n                    fullWidth\n                    variant='contained'\n                    color='primary'\n                    className={classes.submit}\n                    onClick={(event) => handleSignIn(event)}\n                  >\n                    Sign In\n                  </Button>\n                </form>\n                <Typography\n                  style={{ color: 'red', fontSize: 15 }}\n                  component='h5'\n                  variant='h5'\n                >\n                  {stateContext.error}\n                </Typography>\n              </div>\n              <Box mt={5}></Box>\n            </CardContent>\n          </Card>\n        )}\n      </Container>\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n","/home/rawad/ltuc/projct/sportopia/src/auth/auth.js",[],"/home/rawad/ltuc/projct/sportopia/src/components/admin/index.js",["111","112","113","114","115","116","117","118"],"/home/rawad/ltuc/projct/sportopia/src/reducers/admin_reducer.js",[],"/home/rawad/ltuc/projct/sportopia/src/reducers/admin_actions.js",[],"/home/rawad/ltuc/projct/sportopia/src/if/if.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":4,"column":25,"nodeType":"125","messageId":"126","endLine":4,"endColumn":31},{"ruleId":"123","severity":1,"message":"127","line":14,"column":10,"nodeType":"125","messageId":"126","endLine":14,"endColumn":15},{"ruleId":"123","severity":1,"message":"128","line":26,"column":13,"nodeType":"125","messageId":"126","endLine":26,"endColumn":21},{"ruleId":"123","severity":1,"message":"129","line":7,"column":10,"nodeType":"125","messageId":"126","endLine":7,"endColumn":17},{"ruleId":"123","severity":1,"message":"130","line":79,"column":7,"nodeType":"125","messageId":"126","endLine":79,"endColumn":16},{"ruleId":"123","severity":1,"message":"131","line":121,"column":10,"nodeType":"125","messageId":"126","endLine":121,"endColumn":18},{"ruleId":"123","severity":1,"message":"132","line":135,"column":9,"nodeType":"125","messageId":"126","endLine":135,"endColumn":24},{"ruleId":"123","severity":1,"message":"133","line":5,"column":5,"nodeType":"125","messageId":"126","endLine":5,"endColumn":8},{"ruleId":"123","severity":1,"message":"134","line":40,"column":23,"nodeType":"125","messageId":"126","endLine":40,"endColumn":37},{"ruleId":"123","severity":1,"message":"135","line":45,"column":10,"nodeType":"125","messageId":"126","endLine":45,"endColumn":16},{"ruleId":"123","severity":1,"message":"136","line":45,"column":18,"nodeType":"125","messageId":"126","endLine":45,"endColumn":31},{"ruleId":"123","severity":1,"message":"137","line":2,"column":17,"nodeType":"125","messageId":"126","endLine":2,"endColumn":27},{"ruleId":"123","severity":1,"message":"138","line":3,"column":10,"nodeType":"125","messageId":"126","endLine":3,"endColumn":22},{"ruleId":"123","severity":1,"message":"139","line":7,"column":16,"nodeType":"125","messageId":"126","endLine":7,"endColumn":19},{"ruleId":"123","severity":1,"message":"140","line":7,"column":21,"nodeType":"125","messageId":"126","endLine":7,"endColumn":24},{"ruleId":"123","severity":1,"message":"141","line":11,"column":3,"nodeType":"125","messageId":"126","endLine":11,"endColumn":7},{"ruleId":"123","severity":1,"message":"142","line":20,"column":3,"nodeType":"125","messageId":"126","endLine":20,"endColumn":18},{"ruleId":"123","severity":1,"message":"143","line":24,"column":8,"nodeType":"125","messageId":"126","endLine":24,"endColumn":17},{"ruleId":"123","severity":1,"message":"144","line":143,"column":9,"nodeType":"125","messageId":"126","endLine":143,"endColumn":26},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'response' is assigned a value but never used.","'NavLink' is defined but never used.","'useStyles' is assigned a value but never used.","'anchorEl' is assigned a value but never used.","'handleMenuClose' is assigned a value but never used.","'ua1' is assigned a value but never used.","'setComapnyName' is assigned a value but never used.","'logged' is assigned a value but never used.","'setLoginState' is assigned a value but never used.","'useContext' is defined but never used.","'StateContext' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'List' is defined but never used.","'TablePagination' is defined but never used.","'PropTypes' is defined but never used.","'handleFavProducts' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]