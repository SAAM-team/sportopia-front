[{"/home/malek/ltuc/401/sportopia-front/src/index.js":"1","/home/malek/ltuc/401/sportopia-front/src/reportWebVitals.js":"2","/home/malek/ltuc/401/sportopia-front/src/App.js":"3","/home/malek/ltuc/401/sportopia-front/src/store/index.js":"4","/home/malek/ltuc/401/sportopia-front/src/components/bidding/bidding-room.js":"5","/home/malek/ltuc/401/sportopia-front/src/components/singleProduct/singleProduct.js":"6","/home/malek/ltuc/401/sportopia-front/src/components/signin.js":"7","/home/malek/ltuc/401/sportopia-front/src/context/global-state.js":"8","/home/malek/ltuc/401/sportopia-front/src/components/header/header.js":"9","/home/malek/ltuc/401/sportopia-front/src/components/products/products.js":"10","/home/malek/ltuc/401/sportopia-front/src/components/category-prods/category-prods.js":"11","/home/malek/ltuc/401/sportopia-front/src/components/circle/circle.js":"12","/home/malek/ltuc/401/sportopia-front/src/components/bidding/bidding-main.js":"13","/home/malek/ltuc/401/sportopia-front/src/components/admin/index.js":"14","/home/malek/ltuc/401/sportopia-front/src/reducers/bidding.js":"15","/home/malek/ltuc/401/sportopia-front/src/reducers/categories-reducer.js":"16","/home/malek/ltuc/401/sportopia-front/src/reducers/products-reducer.js":"17","/home/malek/ltuc/401/sportopia-front/src/reducers/admin_reducer.js":"18","/home/malek/ltuc/401/sportopia-front/src/reducers/actions.js":"19","/home/malek/ltuc/401/sportopia-front/src/reducers/product-action .js":"20","/home/malek/ltuc/401/sportopia-front/src/reducers/categories-action.js":"21","/home/malek/ltuc/401/sportopia-front/src/components/carousel/carousel.js":"22","/home/malek/ltuc/401/sportopia-front/src/reducers/admin_actions.js":"23","/home/malek/ltuc/401/sportopia-front/src/auth/auth.js":"24","/home/malek/ltuc/401/sportopia-front/src/if/if.js":"25","/home/malek/ltuc/401/sportopia-front/src/components/paypal/paypal.js":"26"},{"size":746,"mtime":1607779736290,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1607593577080,"results":"29","hashOfConfig":"28"},{"size":1499,"mtime":1607858631430,"results":"30","hashOfConfig":"28"},{"size":486,"mtime":1607779736300,"results":"31","hashOfConfig":"28"},{"size":2307,"mtime":1607695167220,"results":"32","hashOfConfig":"28"},{"size":6160,"mtime":1607878126410,"results":"33","hashOfConfig":"28"},{"size":20004,"mtime":1607695167240,"results":"34","hashOfConfig":"28"},{"size":3031,"mtime":1607705455970,"results":"35","hashOfConfig":"28"},{"size":12794,"mtime":1607797043270,"results":"36","hashOfConfig":"28"},{"size":4220,"mtime":1607808294060,"results":"37","hashOfConfig":"28"},{"size":1732,"mtime":1607779736250,"results":"38","hashOfConfig":"28"},{"size":1020,"mtime":1607779736250,"results":"39","hashOfConfig":"28"},{"size":4145,"mtime":1607779736250,"results":"40","hashOfConfig":"28"},{"size":15819,"mtime":1607779736250,"results":"41","hashOfConfig":"28"},{"size":581,"mtime":1607695167240,"results":"42","hashOfConfig":"28"},{"size":955,"mtime":1607779736300,"results":"43","hashOfConfig":"28"},{"size":1729,"mtime":1607877741340,"results":"44","hashOfConfig":"28"},{"size":1189,"mtime":1607695167240,"results":"45","hashOfConfig":"28"},{"size":820,"mtime":1607695167240,"results":"46","hashOfConfig":"28"},{"size":1575,"mtime":1607875792100,"results":"47","hashOfConfig":"28"},{"size":592,"mtime":1607779736300,"results":"48","hashOfConfig":"28"},{"size":2261,"mtime":1607695167220,"results":"49","hashOfConfig":"28"},{"size":5539,"mtime":1607779736290,"results":"50","hashOfConfig":"28"},{"size":561,"mtime":1607779736210,"results":"51","hashOfConfig":"28"},{"size":455,"mtime":1607779736290,"results":"52","hashOfConfig":"28"},{"size":1350,"mtime":1607858697520,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1k4ef75",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"56"},"/home/malek/ltuc/401/sportopia-front/src/index.js",[],["121","122"],"/home/malek/ltuc/401/sportopia-front/src/reportWebVitals.js",[],"/home/malek/ltuc/401/sportopia-front/src/App.js",[],"/home/malek/ltuc/401/sportopia-front/src/store/index.js",[],"/home/malek/ltuc/401/sportopia-front/src/components/bidding/bidding-room.js",["123"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Container } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { getInsideBid } from '../../reducers/actions';\nimport { StateContext } from '../../context/global-state';\nimport SwiftSlider from 'react-swift-slider';\n\nconst data = [\n  {\n    id: '1',\n    src:\n      'https://media.mfbproject.co.za/repos/2017_alfa-romeo_stelvio_leaked_02.jpg'\n  },\n  {\n    id: '2',\n    src:\n      'https://media.mfbproject.co.za/repos/2017_alfa_romeo_stelvioquadrifoglio_official_09.jpg'\n  },\n  {\n    id: '3',\n    src:\n      'https://media.mfbproject.co.za/repos/2018-alfa-romeo-stelvio-quadrifoglio-specs-photos-speed-2.jpg'\n  },\n  {\n    id: '4',\n    src:\n      'https://media.mfbproject.co.za/repos/alfa-romeo-giulia-quadrifoglio-2017-us-wallpapers-and-hd-images-13.jpg'\n  },\n  {\n    id: '5',\n    src:\n      'https://media.mfbproject.co.za/repos/ARWP_Infra_Desk_1920_1080_Quad.png'\n  }\n];\n\nexport function BiddingRoom(props) {\n  console.log('props inside the biiding room', props.productUB);\n  // Context\n  const { productIdBidding } = useContext(StateContext);\n\n  // State\n\n  // Functions\n\n  useEffect(() => {\n    props.getInsideBid(productIdBidding);\n  }, []);\n\n  // useEffect(() => {\n  //   data.push({\n  //     id: 0,\n  //     src: props.productUB.main_img\n  //   });\n  //   props.productUB.images.forEach((image, index) => {\n  //     data.push({\n  //       id: index + 1,\n  //       src: image\n  //     });\n  //   });\n  // }, [props]);\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth='sm'>\n        <SwiftSlider\n          data={data}\n          interval={3000}\n          showDots={false}\n          enableNextAndPrev={false}\n        />\n      </Container>\n    </React.Fragment>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    flexGrow: 1,\n    display: 'flex',\n    alignItems: 'space-between'\n  }\n}));\n\nconst mapStateToProps = (state) => {\n  console.log('state inside the room', state);\n  return {\n    productUB: state.bidding.biddingRoom\n  };\n};\n\nconst mapDispatchToProps = { getInsideBid };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BiddingRoom);\n","/home/malek/ltuc/401/sportopia-front/src/components/singleProduct/singleProduct.js",["124"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport {\n  getProductDetails,\n  buyUsingPaypal,\n} from '../../reducers/product-action ';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Button } from '@material-ui/core';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nexport function ProductDetails(props) {\n  const classes = useStyles();\n  console.log('props inside the one product page', props.redirect);\n  // Context\n\n  // State\n  const [maniImage, setMainImage] = useState('');\n  const [counter, setCounter] = useState(0);\n  const [open, setOpen] = React.useState(false);\n  // const [redirect, setRedirect] = useState('');\n\n  // Functions\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  // setMainImage(props.selectedProduct.main_img);\n  // props.selectedProduct.main_img\n\n  useEffect(() => {\n    props.selectedProduct.map((item) => setMainImage(item.main_img));\n  }, [props.selectedProduct]);\n\n  return (\n    <>\n      {props.selectedProduct.map((product) => {\n        return (\n          <>\n            <div className={classes.root}>\n              <GridListTile className={classes.mainImage} key={product.id}>\n                <img src={maniImage} alt={product.name} />\n              </GridListTile>\n            </div>\n            <div className={classes.root}>\n              <GridList className={classes.gridList} cols={1.5}>\n                <GridListTile key={'main'}>\n                  <img\n                    className={classes.smallImg}\n                    onClick={(e) => setMainImage(e.target.src)}\n                    src={product.main_img}\n                    alt={'main'}\n                  />\n                </GridListTile>\n                {product.images.map((tile) => (\n                  <GridListTile key={tile}>\n                    <img\n                      className={classes.smallImg}\n                      onClick={() => setMainImage(tile)}\n                      src={tile}\n                      alt={tile}\n                    />\n                    <GridListTileBar\n                      classes={{\n                        root: classes.titleBar,\n                        title: classes.title,\n                      }}\n                    />\n                  </GridListTile>\n                ))}\n                <CssBaseline />\n              </GridList>\n              <div className={classes.description}>{product.description}</div>\n            </div>\n            {/* <NavLink to={() => `/paypal/paypalpayment/${product.id}`}> */}\n            <Button\n              onClick={() => {\n                handleOpen();\n                props.buyUsingPaypal(product.id, counter);\n              }}\n              variant=\"contained\"\n              color=\"secondary\"\n            >\n              buy now\n            </Button>\n            <Modal\n              aria-labelledby=\"transition-modal-title\"\n              aria-describedby=\"transition-modal-description\"\n              className={classes.modal}\n              open={open}\n              onClose={handleClose}\n              closeAfterTransition\n              BackdropComponent={Backdrop}\n              BackdropProps={{\n                timeout: 500,\n              }}\n            >\n              <Fade in={open}>\n                <div className={classes.paper}>\n                  <h2 id=\"transition-modal-title\">Transition modal</h2>\n                  <a href={props.redirect} id=\"transition-modal-description\">\n                    react-transition-group animates me.\n                  </a>\n                </div>\n              </Fade>\n            </Modal>\n            {/* </NavLink> */}\n            <ButtonGroup size=\"small\" aria-label=\"small outlined button group\">\n              <Button onClick={() => setCounter(counter + 1)}>+</Button>\n              <Button disabled>{counter}</Button>\n              <Button\n                onClick={() => {\n                  if (counter > 0) {\n                    setCounter(counter - 1);\n                  }\n                }}\n              >\n                -\n              </Button>\n            </ButtonGroup>\n          </>\n        );\n      })}\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  description: {\n    margin: 100,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  mainImage: {\n    display: 'flex',\n    direction: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 400,\n    width: 400,\n    margin: 20,\n  },\n  smallImg: {\n    height: 100,\n    width: 100,\n  },\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)',\n  },\n  title: {\n    color: theme.palette.primary.light,\n  },\n  titleBar: {\n    background: 'rgba(0,0,0,0.0)',\n    // 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n}));\n\nconst mapStateToProps = (state) => {\n  console.log('staaaaaaaaaaat', state.products.redirectURL);\n  return {\n    selectedProduct: state.products.selectedProduct,\n    redirect: state.products.redirectURL,\n  };\n};\n\nconst mapDispatchToProps = { getProductDetails, buyUsingPaypal };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetails);\n","/home/malek/ltuc/401/sportopia-front/src/components/signin.js",["125","126","127"],"import React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  Button,\n  CssBaseline,\n  TextField,\n  Grid,\n  Box,\n  Link,\n  Typography,\n  Container,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Radio,\n  RadioGroup,\n  FormControlLabel\n} from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport LockOpenOutlinedIcon from '@material-ui/icons/LockOpenOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login';\nimport { StateContext } from '../context/global-state';\n\nexport default function SignIn() {\n  // ContextState\n\n  const stateContext = useContext(StateContext);\n  const history = useHistory();\n\n  // States\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [address, setAddress] = useState('');\n  const [telephone, setTelephone] = useState('');\n  const [companyName, setComapnyName] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [gender, setGender] = useState('');\n\n  const [logged, setLoginState] = useState(false);\n  const [register, setRegister] = useState(false);\n  const [registerBuyer, setRegisterBuyer] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  // Functions\n\n  const classes = useStyles();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const responseGoogle = (response) => {\n    console.log(response);\n  };\n  const responseFacebook = (response) => {\n    console.log(response);\n  };\n\n  async function handleSignIn(event) {\n    event.preventDefault();\n    stateContext.login(username, password);\n    if (!stateContext.error) history.push('/');\n  }\n  async function handleSignUp(event, role) {\n    event.preventDefault();\n    const objBody = {\n      username: username,\n      password: password,\n      role: role,\n      companyname: companyName,\n      firstname: firstName,\n      lastname: lastName,\n      adress: address,\n      gender: gender,\n      telephone: telephone\n    };\n    stateContext.register(objBody);\n  }\n\n  return (\n    <>\n      <Container component='main' maxWidth='xs'>\n        {register ? (\n          <Card>\n            <CardContent>\n              <CssBaseline />\n              <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                  <LockOutlinedIcon />\n                </Avatar>\n                <Typography component='h1' variant='h4'>\n                  Sign Up\n                </Typography>\n                <Link\n                  component='button'\n                  onClick={() => {\n                    setRegister(!register);\n                  }}\n                  style={{ marginBottom: '0%', marginTop: '5%' }}\n                >\n                  Existing User? Sign In here!\n                </Link>\n\n                <form className={classes.form}>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                      <Button\n                        style={{ minHeight: 50 }}\n                        type='button'\n                        fullWidth\n                        variant='contained'\n                        color='secondary'\n                        className={classes.submit}\n                        onClick={() => {\n                          setRegisterBuyer(true);\n                          handleClickOpen();\n                        }}\n                      >\n                        Buyer\n                      </Button>\n                    </Grid>\n                    <Dialog\n                      open={open}\n                      onClose={handleClose}\n                      aria-labelledby='form-dialog-title'\n                    >\n                      <DialogTitle id='form-dialog-title'>\n                        {registerBuyer\n                          ? 'Sign Up as a Buyer'\n                          : 'Sign Up as a Seller'}\n                      </DialogTitle>\n                      <DialogContent>\n                        {registerBuyer ? (\n                          <form className={classes.form}>\n                            <Grid\n                              container\n                              spacing={1}\n                              style={{\n                                marginBottom: 20\n                              }}\n                            >\n                              <Grid item xs={2} sm={2.7}></Grid>\n                              <Grid item xs={1} sm={5}>\n                                <GoogleLogin\n                                  clientId='1017961095121-u3na2ktuf9i8m0s7ndq0l9ishqpsbfst.apps.googleusercontent.com'\n                                  buttonText='Signup'\n                                  onSuccess={responseGoogle}\n                                  onFailure={responseGoogle}\n                                  cookiePolicy={'single_host_origin'}\n                                  style={{\n                                    borderRightWidth: 1,\n                                    borderRightColor: 'black'\n                                  }}\n                                />\n                              </Grid>\n                              <Grid item xs={1} sm={4}>\n                                <FacebookLogin\n                                  appId='562118384400275'\n                                  fields='name,username,picture'\n                                  scope='public_profile,user_friends'\n                                  callback={responseFacebook}\n                                  icon='fa-facebook'\n                                  textButton='SignUp'\n                                  size='small'\n                                />\n                              </Grid>\n                            </Grid>\n                            <Grid container spacing={2}>\n                              <Grid item xs={12} sm={6}>\n                                <TextField\n                                  name='userName'\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  id='userName'\n                                  label='User Name'\n                                  onChange={(e) => setUsername(e.target.value)}\n                                  autoFocus\n                                />\n                              </Grid>\n                              <Grid item xs={12} sm={6}>\n                                <TextField\n                                  type='password'\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  onChange={(e) => setPassword(e.target.value)}\n                                  id='password'\n                                  label='Password'\n                                  name='password'\n                                />\n                              </Grid>\n                              <Grid item xs={12} sm={6}>\n                                <TextField\n                                  name='firstName'\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  id='firstName'\n                                  label='First Name'\n                                  onChange={(e) => setFirstName(e.target.value)}\n                                  autoFocus\n                                />\n                              </Grid>\n                              <Grid item xs={2} sm={6}>\n                                <TextField\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  onChange={(e) => setLastName(e.target.value)}\n                                  id='lastName'\n                                  label='Last Name'\n                                  name='lastName'\n                                />\n                              </Grid>\n                              <Grid item xs={2} sm={12}>\n                                <TextField\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  onChange={(e) => setAddress(e.target.value)}\n                                  id='address'\n                                  label='Address'\n                                  name='address'\n                                />\n                              </Grid>\n                              <Grid item xs={2} sm={8}>\n                                <RadioGroup\n                                  row\n                                  aria-label='gender'\n                                  name='gender1'\n                                  value={gender}\n                                  onChange={(e) => setGender(e.target.value)}\n                                >\n                                  <FormControlLabel\n                                    value='female'\n                                    control={<Radio />}\n                                    label='Female'\n                                  />\n                                  <FormControlLabel\n                                    value='male'\n                                    control={<Radio />}\n                                    label='Male'\n                                  />\n                                  <FormControlLabel\n                                    value='other'\n                                    control={<Radio />}\n                                    label='Other'\n                                  />\n                                </RadioGroup>\n                              </Grid>\n                              <Grid item xs={2} sm={4}>\n                                <TextField\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  onChange={(e) => setTelephone(e.target.value)}\n                                  id='telephone'\n                                  label='Telephone'\n                                  name='telephone'\n                                />\n                              </Grid>\n                            </Grid>\n                            <Button\n                              type='submit'\n                              fullWidth\n                              variant='contained'\n                              color='primary'\n                              className={classes.submit}\n                              onClick={(event) => handleSignUp(event, 'buyer')}\n                            >\n                              Sign Up\n                            </Button>\n                            <Typography\n                              style={{ fontSize: 15 }}\n                              component='h5'\n                              variant='h5'\n                            >\n                              {stateContext.success\n                                ? stateContext.success\n                                : stateContext.error}\n                            </Typography>\n                          </form>\n                        ) : (\n                          <form className={classes.form}>\n                            <Grid container spacing={2}>\n                              <Grid item xs={12} sm={6}>\n                                <TextField\n                                  name='userName'\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  id='userName'\n                                  label='User Name'\n                                  onChange={(e) => setUsername(e.target.value)}\n                                  autoFocus\n                                />\n                              </Grid>\n                              <Grid item xs={12} sm={6}>\n                                <TextField\n                                  type='password'\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  onChange={(e) => setPassword(e.target.value)}\n                                  id='password'\n                                  label='Password'\n                                  name='password'\n                                />\n                              </Grid>\n                              <Grid item xs={12} sm={6}>\n                                <TextField\n                                  name='companyName'\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  id='companyName'\n                                  label='Company Name'\n                                  onChange={(e) => setFirstName(e.target.value)}\n                                  autoFocus\n                                />\n                              </Grid>\n                              <Grid item xs={2} sm={6}>\n                                <TextField\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  onChange={(e) => setTelephone(e.target.value)}\n                                  id='telephone'\n                                  label='Telephone'\n                                  name='telephone'\n                                />\n                              </Grid>\n                              <Grid item xs={2} sm={12}>\n                                <TextField\n                                  variant='outlined'\n                                  required\n                                  fullWidth\n                                  onChange={(e) => setAddress(e.target.value)}\n                                  id='address'\n                                  label='Address'\n                                  name='address'\n                                />\n                              </Grid>\n                            </Grid>\n                            <Button\n                              type='submit'\n                              fullWidth\n                              variant='contained'\n                              color='primary'\n                              className={classes.submit}\n                              onClick={(event) => handleSignUp(event, 'seller')}\n                            >\n                              Sign Up\n                            </Button>\n                          </form>\n                        )}\n                      </DialogContent>\n                    </Dialog>\n                    <Grid item xs={12} sm={6}>\n                      <Button\n                        style={{ minHeight: 50 }}\n                        type='button'\n                        fullWidth\n                        variant='contained'\n                        color='secondary'\n                        className={classes.submit}\n                        onClick={() => {\n                          setRegisterBuyer(false);\n                          handleClickOpen();\n                        }}\n                      >\n                        Seller\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </form>\n              </div>\n              <Box mt={5}></Box>\n            </CardContent>\n          </Card>\n        ) : (\n          <Card>\n            <CardContent>\n              <CssBaseline />\n              <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                  <LockOpenOutlinedIcon />\n                </Avatar>\n                <Typography component='h1' variant='h4'>\n                  Sign In\n                </Typography>\n                <Link\n                  component='button'\n                  onClick={() => {\n                    setRegister(true);\n                  }}\n                  style={{ marginBottom: '10%', marginTop: '5%' }}\n                >\n                  New User? Sign up here!\n                </Link>\n                <Grid container spacing={1}>\n                  <Grid item xs={2} sm={2.7}></Grid>\n                  <Grid item xs={1} sm={5}>\n                    <GoogleLogin\n                      clientId='1017961095121-u3na2ktuf9i8m0s7ndq0l9ishqpsbfst.apps.googleusercontent.com'\n                      buttonText='Login'\n                      onSuccess={responseGoogle}\n                      onFailure={responseGoogle}\n                      cookiePolicy={'single_host_origin'}\n                    />\n                  </Grid>\n                  <Grid item xs={1} sm={4}>\n                    <FacebookLogin\n                      appId='562118384400275'\n                      fields='name,username,picture'\n                      scope='public_profile,user_friends'\n                      callback={responseFacebook}\n                      icon='fa-facebook'\n                      textButton='Login'\n                      size='small'\n                    />\n                  </Grid>\n                </Grid>\n                <Typography component='h1' variant='h5'>\n                  Or\n                </Typography>\n                <form className={classes.form}>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                      <TextField\n                        name='userName'\n                        variant='outlined'\n                        required\n                        fullWidth\n                        id='userName'\n                        label='User Name'\n                        onChange={(e) => setUsername(e.target.value)}\n                        autoFocus\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <TextField\n                        type='password'\n                        variant='outlined'\n                        required\n                        fullWidth\n                        onChange={(e) => setPassword(e.target.value)}\n                        id='password'\n                        label='Password'\n                        name='password'\n                      />\n                    </Grid>\n                  </Grid>\n                  <Button\n                    type='submit'\n                    fullWidth\n                    variant='contained'\n                    color='primary'\n                    className={classes.submit}\n                    onClick={(event) => handleSignIn(event)}\n                  >\n                    Sign In\n                  </Button>\n                </form>\n                <Typography\n                  style={{ color: 'red', fontSize: 15 }}\n                  component='h5'\n                  variant='h5'\n                >\n                  {stateContext.error}\n                </Typography>\n              </div>\n              <Box mt={5}></Box>\n            </CardContent>\n          </Card>\n        )}\n      </Container>\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n","/home/malek/ltuc/401/sportopia-front/src/context/global-state.js",["128","129"],"import React, { useState } from 'react';\nimport superagent from 'superagent';\nimport jwt from 'jsonwebtoken';\nimport cookie from 'react-cookies';\n\nexport const StateContext = React.createContext();\nconst JWT_SECRET = 'thebestsecrett';\n\nconst API_LINK = 'https://sportopiav1.herokuapp.com';\n\nexport default function GlobalState(props) {\n  // State\n  const [isLogged, setIsLogged] = useState(false);\n  const [token, setToken] = useState('');\n  const [user, setUser] = useState({});\n  const [productId, setProductId] = useState('');\n  const [singleProductId, setSingleProductId] = useState('');\n  const [productIdBidding, setProductIdBidding] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Functions\n\n  const login = async (username, password) => {\n    let ua1 = superagent.agent();\n    try {\n      const response = await ua1\n        .post(`${API_LINK}/signin`)\n        .set('authorization', `Basic ${btoa(`${username}:${password}`)}`)\n        .end(function (err, res) {\n          // console.log(res);\n          try {\n            let token = JSON.parse(res.text);\n            validateToken(token);\n          } catch (error) {\n            setError(res.text);\n          }\n        });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const validateToken = (token) => {\n    try {\n      token = token.token;\n      console.log(token);\n      let user = jwt.verify(token, JWT_SECRET);\n      cookie.save('token', token, { path: '/', maxAge: 2592000 });\n      cookie.save('user', user.user_id, { path: '/', maxAge: 2592000 });\n      setLoginState(true, token, user);\n    } catch (e) {\n      setError('Wrong password or username');\n      setLoginState(false, null, {});\n    }\n  };\n\n  const register = async (obj) => {\n    try {\n      const response = await superagent.post(`${API_LINK}/signup`).send(obj);\n      console.log(response);\n      if (response.body.message === 'This username already used') {\n        setError(response.body.message);\n      } else {\n        if (obj.role === 'seller') {\n          setSuccess(\n            'Your registered as a Seller, Please wait 1-2 days to be activated'\n          );\n        } else {\n          setSuccess(\n            'You have registered as a Buyer Please sign with you account!!'\n          );\n        }\n      }\n    } catch (error) {\n      setError(\n        'Something Went Bad, Please try again later!! Thank you for understanding'\n      );\n    }\n  };\n\n  const setLoginState = (loggedIn, token, user) => {\n    console.log('inside the state', user);\n    setIsLogged(loggedIn);\n    setToken(token);\n    setUser(user);\n  };\n\n  const state = {\n    isLogged,\n    setIsLogged,\n    user,\n    setUser,\n    productId,\n    singleProductId,\n    setProductId,\n    productIdBidding,\n    setProductIdBidding,\n    setSingleProductId,\n    login,\n    register,\n    error,\n    success,\n    setSuccess,\n    setError,\n  };\n  return (\n    <StateContext.Provider value={state}>\n      {props.children}\n    </StateContext.Provider>\n  );\n}\n","/home/malek/ltuc/401/sportopia-front/src/components/header/header.js",["130","131","132","133","134","135","136"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport {\n  getRemoteData,\n  activeCategory,\n} from '../../reducers/categories-action';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport {\n  List,\n  Divider,\n  Drawer,\n  ListItem,\n  ListItemText,\n  Fab,\n  Tooltip,\n  Zoom,\n  Menu,\n  MenuItem,\n  Badge,\n  InputBase,\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Button,\n} from '@material-ui/core';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\nimport GavelRoundedIcon from '@material-ui/icons/GavelRounded';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport PropTypes from 'prop-types';\nimport ShoppingCartRoundedIcon from '@material-ui/icons/ShoppingCartRounded';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport a1 from './assets/11.gif';\nimport a2 from './assets/12.gif';\nimport a3 from './assets/13.gif';\nimport a4 from './assets/14.gif';\nimport a5 from './assets/15.gif';\nimport a6 from './assets/16.gif';\nimport a7 from './assets/17.gif';\nimport a8 from './assets/18.gif';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Link } from 'react-router-dom';\nimport avatar from './avatar.gif';\nimport Auth from '../../auth/auth';\n\nconst avatarIcons = [a1, a2, a3, a4, a5, a6, a7, a8];\n\nfunction ScrollTop(props) {\n  const { children, window } = props;\n  const classes = useStyles();\n\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100,\n  });\n\n  const handleClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      '#back-to-top-anchor'\n    );\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }\n  };\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        {children}\n      </div>\n    </Zoom>\n  );\n}\nScrollTop.propTypes = {\n  children: PropTypes.element.isRequired,\n  window: PropTypes.func,\n};\n\nfunction Header(props) {\n  useEffect(() => {\n    props.getRemoteData();\n  }, []);\n\n  const classes = useStyles();\n  // start of drawer\n  const [state, setState] = React.useState(false);\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event.type === 'keydown' &&\n      (event.key === 'Tab' || event.key === 'Shift')\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      // style={{backgroundColor: '#6BAB90', height: '100%', color:'E1F0C4' }}\n      className={classes.list}\n      role=\"presentation\"\n      onClick={() => props.getRemoteData()}\n      onClick={toggleDrawer(anchor, false)}\n    >\n      <Typography style={{ padding: '10px 0px 5px 10px' }} variant=\"h4\" noWrap>\n        Categories\n      </Typography>\n      <Divider />\n      <List>\n        {props.categories.map((category, index) => (\n          <>\n            <ListItem button key={category.id}>\n              <ListItemAvatar>\n                <Avatar alt=\"\" src={avatarIcons[index]} />\n              </ListItemAvatar>\n              <ListItemText\n                primary={category.category_name}\n                onClick={() => {\n                  props.activeCategory(category.id);\n                  // props.getRemoteData()\n                }}\n              />\n            </ListItem>\n            <Divider />\n          </>\n        ))}\n      </List>\n    </div>\n  );\n  // end of drawer\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  // const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  // const renderMenu = (\n  //   <Menu\n  //     anchorEl={anchorEl}\n  //     anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n  //     id={menuId}\n  //     keepMounted\n  //     transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n  //     open={isMenuOpen}\n  //     onClose={handleMenuClose}\n  //   >\n  //     <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n  //     <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n  //   </Menu>\n  // );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={0} color=\"secondary\">\n            <FavoriteRoundedIcon />\n          </Badge>\n        </IconButton>\n        <p>My Favorite</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <PersonRoundedIcon />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar style={{ backgroundColor: '#157A6E' }} position=\"static\">\n        <Toolbar>\n          {/* ..................................burger view ......................................... */}\n\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={toggleDrawer('left', true)}\n          >\n            <MenuIcon></MenuIcon>\n          </IconButton>\n          <NavLink to=\"/\">\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              Sportopia\n            </Typography>\n          </NavLink>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div>\n            <React.Fragment key={'left'}>\n              <Drawer\n                anchor=\"left\"\n                open={state['left']}\n                onClose={toggleDrawer('left', false)}\n              >\n                {list('left')}\n              </Drawer>\n            </React.Fragment>\n          </div>\n\n          {/* ................................icons on nav bar .................................... */}\n          <div className={classes.sectionDesktop}>\n            <Button color=\"inherit\">Sell</Button>\n            <Auth role={'admin'}>\n              <NavLink color=\"inherit\" to=\"/admin\">\n                Admin\n              </NavLink>\n            </Auth>\n\n            <Tooltip\n              placement=\"top\"\n              arrow\n              TransitionComponent={Zoom}\n              title=\"bids list\"\n            >\n              <IconButton\n                aria-label=\"show 17 new notifications\"\n                color=\"inherit\"\n              >\n                <Badge badgeContent={17} color=\"secondary\">\n                  <GavelRoundedIcon />\n                </Badge>\n              </IconButton>\n            </Tooltip>\n            <Tooltip\n              placement=\"top\"\n              arrow\n              TransitionComponent={Zoom}\n              title=\"My Favorite\"\n            >\n              <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                <Badge badgeContent={0} color=\"secondary\">\n                  <FavoriteRoundedIcon />\n                </Badge>\n              </IconButton>\n            </Tooltip>\n            <Tooltip\n              placement=\"top\"\n              arrow\n              TransitionComponent={Zoom}\n              title=\"My Cart\"\n            >\n              <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                <Badge badgeContent={0} color=\"secondary\">\n                  <ShoppingCartRoundedIcon />\n                </Badge>\n              </IconButton>\n            </Tooltip>\n            <Tooltip\n              placement=\"top\"\n              arrow\n              TransitionComponent={Zoom}\n              title=\"sign in / up\"\n            >\n              <NavLink to=\"/register\">\n                <IconButton\n                  edge=\"end\"\n                  aria-label=\"account of current user\"\n                  aria-controls={menuId}\n                  aria-haspopup=\"true\"\n                  onClick={handleProfileMenuOpen}\n                  color=\"inherit\"\n                >\n                  <PersonRoundedIcon />\n                </IconButton>\n              </NavLink>\n            </Tooltip>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Toolbar id=\"back-to-top-anchor\" />\n\n      {renderMobileMenu}\n      {/* {renderMenu} */}\n      <ScrollTop {...props}>\n        <Fab\n          style={{ backgroundColor: '#157A6E' }}\n          size=\"small\"\n          aria-label=\"scroll back to top\"\n        >\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </ScrollTop>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  root: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  list: {\n    width: 250,\n    backgroundColor: '#6BAB90',\n    height: '100%',\n    color: 'E1F0C4',\n    borderBottom: '1px solid black',\n  },\n  fullList: {\n    width: 'auto',\n  },\n}));\n\nconst mapStateToProps = (state) => {\n  return {\n    categories: state.categories.results,\n  };\n};\nconst mapDispatchToProps = { getRemoteData, activeCategory };\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","/home/malek/ltuc/401/sportopia-front/src/components/products/products.js",["137","138"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useContext } from 'react';\nimport {\n  getRemoteData,\n  getProductDetails,\n} from '../../reducers/product-action ';\nimport { connect } from 'react-redux';\nimport { StateContext } from '../../context/global-state';\nimport './products.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport { CardHeader, Zoom, Tooltip, Badge } from '@material-ui/core';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ShoppingCartRoundedIcon from '@material-ui/icons/ShoppingCartRounded';\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\nimport Button from '@material-ui/core/Button';\nimport { NavLink } from 'react-router-dom';\nimport Carousel from '../carousel/carousel';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 300,\n    // maxHeight:500,\n    boxShadow: '0 0 10px 0px rgba(0, 0, 0, 0.25)',\n  },\n  media: {\n    height: 0,\n    paddingTop: '100%', // 16:9\n  },\n  header: {\n    height: 175,\n    // paddingBottom: '0', // 16:9\n    alignItems: 'center',\n  },\n}));\n\nfunction Products(props) {\n  const classes = useStyles();\n  const { setSingleProductId } = useContext(StateContext);\n  const selectedProductId = (p_id) => {};\n\n  useEffect(() => {\n    props.getRemoteData();\n  }, []);\n\n  return (\n    <>\n      <Carousel />\n      {/* <Typography style={{ marginLeft: '45%', marginBottom:'20px', color:'#050505' }} variant=\"h3\" noWrap>\n              Products: \n            </Typography> */}\n      <section className=\"container\">\n        {props.products.map((product) => {\n          return (\n            <Card className={classes.root} key={product.name}>\n              <CardMedia\n                className={classes.media}\n                image={product.main_img}\n                title={product.id}\n              />\n              <CardHeader\n                className={classes.header}\n                title={product.name}\n                subheader={product.description}\n              />\n              <CardActions disableSpacing>\n                <CardContent>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    price: {product.price} $\n                  </Typography>\n                </CardContent>\n                <Tooltip\n                  placement=\"top\"\n                  arrow\n                  TransitionComponent={Zoom}\n                  title=\"add to favorite\"\n                >\n                  <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                    <Badge badgeContent={0} color=\"secondary\">\n                      <FavoriteRoundedIcon />\n                    </Badge>\n                  </IconButton>\n                </Tooltip>\n\n                <Tooltip\n                  placement=\"top\"\n                  arrow\n                  TransitionComponent={Zoom}\n                  title=\"add to cart\"\n                >\n                  <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                    <Badge badgeContent={0} color=\"secondary\">\n                      <ShoppingCartRoundedIcon />\n                    </Badge>\n                  </IconButton>\n                </Tooltip>\n                <NavLink to={() => `/product/${product.id}`}>\n                  <Button\n                    onClick={() => props.getProductDetails(product.id)}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                  >\n                    Details\n                  </Button>\n                </NavLink>\n              </CardActions>\n            </Card>\n          );\n        })}\n      </section>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    products: state.products.results,\n  };\n};\nconst mapDispatchToProps = { getRemoteData, getProductDetails };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\n","/home/malek/ltuc/401/sportopia-front/src/components/category-prods/category-prods.js",["139","140","141","142"],"import { connect } from 'react-redux';\nimport { If } from 'react-if'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    // border: 'solid 1px #25374a',\n    color: theme.palette.text.primary,\n  },\n  container: {\n    marginTop: '100px',\n    marginBottom:'30px'\n  },\n  containerBtn: {\n    marginTop: '30px'\n  },\n  image: {\n    position: 'relative',\n    height: 200,\n    [theme.breakpoints.down('xs')]: {\n      width: '100% !important', // Overrides inline-style\n      height: 100,\n    },\n    '&:hover, &$focusVisible': {\n      zIndex: 1,\n      '& $imageBackdrop': {\n        opacity: 0.15,\n      },\n      '& $imageMarked': {\n        opacity: 0,\n      },\n      '& $imageTitle': {\n        border: '4px solid currentColor',\n      },\n    },\n  }\n}));\n\n\nconst Products = (props) => {\n    console.log('props inside Category Product',props);\n  const classes = useStyles();\n  return (\n    <Grid className={classes.container} container justify=\"center\" wrap=\"warp\" spacing={2}>\n      {/* {props.products.map((product) => {\n        return (\n          <Grid item sm={4}>\n            <If condition={props.active !== ''}>\n              \n            </If>\n          </Grid>\n        );\n      })} */}\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { \n    products: state.products.activeProducts,\n    active: state.categories.active\n };\n};\n\n\n\nexport default connect(mapStateToProps)(Products);","/home/malek/ltuc/401/sportopia-front/src/components/circle/circle.js",["143","144","145"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './circle.css'\nimport $ from 'jquery';\n\nexport const EachCategory = () => {\n    $('#header').each(function () {\n        $('#header').toggleClass('hide')\n    });\n    return (\n        <div>\n            <header id=\"header\">\n\t\t\t\t<div className=\"inner\">\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<h1>Bids Item</h1>\n\t\t\t\t\t\t<h2>Check the active auctions </h2>\n\t\t\t\t\t\t<a href=\"#\" className=\"button big alt\" onClick={() =>   $('#header').each(function () {\n        $('#header').toggleClass('hide')\n    })}>\n                            <button>Let's Go</button></a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<a href=\"#\" className=\"button hidden\" onClick={() =>   $('#header').each(function () {\n        $('#header').toggleClass('hide')\n    })}><span>Let's Go</span></a>\n\t\t\t\t</div>\n\t\t\t</header>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    \n})\n\nconst mapDispatchToProps = {\n    \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EachCategory)\n","/home/malek/ltuc/401/sportopia-front/src/components/bidding/bidding-main.js",["146"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect, useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getBiddingItems } from '../../reducers/actions';\nimport { StateContext } from '../../context/global-state';\nimport { NavLink, Link } from 'react-router-dom';\nimport {\n  Card,\n  CardMedia,\n  CardActionArea,\n  Button,\n  CardContent,\n  CardActions,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Slide,\n  Typography,\n  Grid\n} from '@material-ui/core';\n\nexport function BiddingMain(props) {\n  const classes = useStyles();\n\n  // Context\n  const { setProductIdBidding } = useContext(StateContext);\n  //   States\n  const [open, setOpen] = useState(false);\n\n  // Functions\n  useEffect(() => {\n    props.getBiddingItems();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // Save the product id in the cookies\n  const saveProductId = (p_id) => {\n    setProductIdBidding(p_id);\n  };\n\n  return (\n    <div className={classes.container}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6} md={4} lg={3}>\n          <Card className={classes.root}>\n            <CardActionArea>\n              <CardMedia\n                className={classes.media}\n                image='https://cdn.shopify.com/s/files/1/0051/4802/products/Small_Octocat_500x.png?v=1571377850'\n                title='Contemplative Reptile'\n              />\n              <CardContent>\n                <Typography gutterBottom variant='h5' component='h2'>\n                  Lizard\n                </Typography>\n                <Typography variant='body2' color='textSecondary' component='p'>\n                  Lizards are a widespread group of squamate reptiles, with over\n                  6,000 species, ranging across all continents except Antarctica\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Link to={() => `/bidding/${1}`}>\n                <Button\n                  onClick={() => saveProductId(2)}\n                  size='small'\n                  color='primary'\n                >\n                  Enter Bidding Room\n                </Button>\n              </Link>\n              <Button onClick={handleClickOpen} size='small' color='primary'>\n                Learn More\n              </Button>\n            </CardActions>\n          </Card>\n          <Dialog\n            open={open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={handleClose}\n            aria-labelledby='alert-dialog-slide-title'\n            aria-describedby='alert-dialog-slide-description'\n          >\n            <DialogTitle id='alert-dialog-slide-title'>\n              {\"Use Google's location service?\"}\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText id='alert-dialog-slide-description'>\n                Let Google help apps determine location. This means sending\n                anonymous location data to Google, even when no apps are\n                running.\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} color='primary'>\n                OK!\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    flexGrow: 1,\n    display: 'flex',\n    alignItems: 'space-between'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center'\n  },\n\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 250\n  }\n}));\n\n// Functions\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction='up' ref={ref} {...props} />;\n});\n\nconst mapStateToProps = (state) => {\n  return {\n    products: state.bidding.biddingProducts\n  };\n};\n\nconst mapDispatchToProps = { getBiddingItems };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BiddingMain);\n","/home/malek/ltuc/401/sportopia-front/src/components/admin/index.js",["147","148","149","150","151"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { StateContext } from '../../context/global-state';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { If, Then, Else } from '../../if/if';\nimport { deepPurple } from '@material-ui/core/colors';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport {\n  Grid,\n  Paper,\n  ListItem,\n  Divider,\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  ListItemText,\n  Fab,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Avatar,\n  Tooltip\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport { connect } from 'react-redux';\n\nimport {\n  allSellers,\n  allActiveSellers,\n  allDeActiveSellers,\n  allBuyers,\n  allActiveBuyers,\n  allDeActiveBuyers,\n  allProducts,\n  allDProducts,\n  allAProducts,\n  allBProducts,\n  allCProducts,\n  addCategory,\n  numberOfUsers\n} from '../../reducers/admin_actions';\n\n// Table Info\n\nlet rowsS = [];\nlet rowsB = [];\nlet rowP = [];\n\nexport function Admin(props) {\n  const [keys, setKeys] = useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [category, setCategory] = useState('');\n\n  // Effect\n\n  useEffect(() => {\n    props.numberOfUsers();\n  }, []);\n\n  useEffect(() => {\n    rowsS = [];\n    rowsB = [];\n    rowP = [];\n    setKeys(props.info.length ? Object.keys(props.info[0]) : []);\n    props.info.forEach((item) => {\n      if (item.user_role === 'seller') {\n        rowsS.push(\n          createSData(\n            item.user_name,\n            item.user_role,\n            item.company_name,\n            item.adress,\n            item.telephone\n          )\n        );\n      } else if (item.user_role === 'buyer') {\n        rowsB.push(\n          createBData(\n            item.user_name,\n            item.user_role,\n            item.first_name,\n            item.last_name,\n            item.adress,\n            item.telephone,\n            item.gender,\n            item.card_number ? 'XXXXXXXXXXX' : 'Not Inserted'\n          )\n        );\n      } else {\n        rowP.push(\n          createPData(\n            item.name,\n            item.description,\n            item.main_img,\n            item.price,\n            item.category_name,\n            item.company_name\n          )\n        );\n      }\n    });\n  }, [props.info]);\n\n  const classes = useStyles();\n\n  // Functions\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleAllSellers = () => {\n    props.allSellers();\n  };\n\n  const handleAllActiveSeller = () => {\n    props.allActiveSellers();\n  };\n\n  const handleAllDeActiveSeller = () => {\n    props.allDeActiveSellers();\n  };\n\n  const handleAllBuyers = () => {\n    props.allBuyers();\n  };\n\n  const handleAllActiveBuyers = () => {\n    props.allActiveBuyers();\n  };\n\n  const handleAllDeActiveBuyers = () => {\n    props.allDeActiveBuyers();\n  };\n  const handleAllProducts = () => {\n    props.allProducts();\n  };\n\n  const handleDeletedProducts = () => {\n    props.allDProducts();\n  };\n\n  const handleActiveProducts = () => {\n    props.allAProducts();\n  };\n\n  const handleBoughtProducts = () => {\n    props.allBProducts();\n  };\n\n  const handleCartProducts = () => {\n    props.allCProducts();\n  };\n\n  const handleFavProducts = () => {};\n\n  const handleAddCategory = () => {\n    props.addCategory(category);\n  };\n\n  const generateList = () => {\n    return (\n      <Grid item xs={12}>\n        <ListItem button>\n          <Avatar className={classes.purple}>A</Avatar>\n          <ListItemText primary='Anthign' />\n          <Divider />\n        </ListItem>\n        <ListItem button onClick={() => handleAllSellers()}>\n          <ListItemText secondary='Sellers' />\n          <Divider />\n        </ListItem>\n        <ListItem button onClick={() => handleAllActiveSeller()}>\n          <ListItemText secondary='Active Sellers' />\n          <Divider />\n        </ListItem>\n        <ListItem button onClick={() => handleAllDeActiveSeller()}>\n          <ListItemText secondary='Deactivate Sellers' />\n          <Divider />\n        </ListItem>\n        <ListItem button onClick={() => handleAllBuyers()}>\n          <ListItemText secondary='Buyers' />\n          <Divider />\n        </ListItem>\n        <ListItem button onClick={() => handleAllActiveBuyers()}>\n          <ListItemText secondary='Active Buyers' />\n          <Divider />\n        </ListItem>\n        <ListItem button onClick={() => handleAllDeActiveBuyers()}>\n          <ListItemText secondary='Deactivate Buyers' />\n          <Divider />\n        </ListItem>\n        <ListItem button onClick={() => handleAllProducts()}>\n          <ListItemText secondary='Products' />\n          <Divider />\n        </ListItem>\n        <ListItem button onClick={() => handleDeletedProducts()}>\n          <ListItemText secondary='Deleted Products' />\n          <Divider />\n        </ListItem>\n        <ListItem button onClick={() => handleActiveProducts()}>\n          <ListItemText secondary='Active Products' />\n          <Divider />\n        </ListItem>\n        <ListItem button onClick={() => handleBoughtProducts()}>\n          <ListItemText secondary='Bough Products' />\n          <Divider />\n        </ListItem>\n        <ListItem button onClick={() => handleCartProducts()}>\n          <ListItemText secondary='In Cart/Not Bought Products' />\n          <Divider />\n        </ListItem>\n      </Grid>\n    );\n  };\n  return (\n    <>\n      <Tooltip title='Add Category'>\n        <Fab\n          style={{ position: 'absolute', top: 70, right: 30 }}\n          color='primary'\n          aria-label='add'\n        >\n          <AddIcon onClick={handleClickOpen} />\n        </Fab>\n      </Tooltip>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby='form-dialog-title'\n      >\n        <DialogTitle id='form-dialog-title'>Adding Category</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Adding New Category</DialogContentText>\n          <TextField\n            autoFocus\n            margin='dense'\n            id='name'\n            label='Category Name'\n            type='email'\n            fullWidth\n            onChange={(e) => setCategory(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color='primary'>\n            Cancel\n          </Button>\n          <Button onClick={() => handleAddCategory()} color='primary'>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Grid\n        xs={12}\n        container\n        direction='row'\n        justify='space-between'\n        alignItems='flex-start'\n      >\n        <Grid\n          lg={2}\n          xs={12}\n          container\n          direction='column'\n          justify='space-between'\n          alignItems='flex-start'\n        >\n          {generateList()}\n        </Grid>\n        <Grid\n          lg={10}\n          xs={12}\n          container\n          direction='column'\n          justify='space-between'\n          alignItems='flex-start'\n        >\n          <Grid\n            xs={12}\n            container\n            direction='row'\n            justify='space-around'\n            alignItems='center'\n            style={{ marginBottom: 20 }}\n          >\n            {cards()}\n          </Grid>\n\n          <Grid item xs={12} container direction='row'>\n            <TableContainer style={{ marginRight: 15 }} component={Paper}>\n              <Table className={classes.table} aria-label='customized table'>\n                <TableHead>\n                  <TableRow>\n                    {keys.map((key) => {\n                      return (\n                        <StyledTableCell align='center' key={key}>\n                          {key}\n                        </StyledTableCell>\n                      );\n                    })}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <If condition={rowsS.length}>\n                    <Then>\n                      {rowsS.map((row) => (\n                        <StyledTableRow key={row.name}>\n                          <StyledTableCell\n                            align='center'\n                            component='th'\n                            scope='row'\n                          >\n                            {row.name}\n                          </StyledTableCell>\n                          <StyledTableCell align='center'>\n                            {row.role}\n                          </StyledTableCell>\n                          <StyledTableCell align='center'>\n                            {row.company}\n                          </StyledTableCell>\n                          <StyledTableCell align='center'>\n                            {row.address}\n                          </StyledTableCell>\n                          <StyledTableCell align='center'>\n                            {row.telephone}\n                          </StyledTableCell>\n                        </StyledTableRow>\n                      ))}\n                    </Then>\n                    <Else>\n                      <If condition={rowsB.length}>\n                        <Then>\n                          {rowsB.map((row) => (\n                            <StyledTableRow key={row.name}>\n                              <StyledTableCell\n                                align='center'\n                                component='th'\n                                scope='row'\n                              >\n                                {row.name}\n                              </StyledTableCell>\n                              <StyledTableCell align='center'>\n                                {row.role}\n                              </StyledTableCell>\n                              <StyledTableCell align='center'>\n                                {row.first_name}\n                              </StyledTableCell>\n                              <StyledTableCell align='center'>\n                                {row.last_name}\n                              </StyledTableCell>\n                              <StyledTableCell align='center'>\n                                {row.address}\n                              </StyledTableCell>\n                              <StyledTableCell align='center'>\n                                {row.telephone}\n                              </StyledTableCell>\n                              <StyledTableCell align='center'>\n                                {row.gender}\n                              </StyledTableCell>\n                              <StyledTableCell align='center'>\n                                {row.card_number}\n                              </StyledTableCell>\n                            </StyledTableRow>\n                          ))}\n                        </Then>\n                        <Else>\n                          <If condition={rowP.length}>\n                            <Then>\n                              {rowP.map((row) => (\n                                <StyledTableRow key={row.name}>\n                                  <StyledTableCell\n                                    align='center'\n                                    component='th'\n                                    scope='row'\n                                  >\n                                    {row.name}\n                                  </StyledTableCell>\n                                  <StyledTableCell align='center'>\n                                    {row.description}\n                                  </StyledTableCell>\n                                  <StyledTableCell align='center'>\n                                    <Avatar\n                                      alt='Product Image'\n                                      src={row.main_img}\n                                      className={classes.large}\n                                    />\n                                  </StyledTableCell>\n                                  <StyledTableCell align='center'>\n                                    {row.price} $\n                                  </StyledTableCell>\n                                  <StyledTableCell align='center'>\n                                    {row.category_name}\n                                  </StyledTableCell>\n                                  <StyledTableCell align='center'>\n                                    {row.company_name}\n                                  </StyledTableCell>\n                                </StyledTableRow>\n                              ))}\n                            </Then>\n                          </If>\n                        </Else>\n                      </If>\n                    </Else>\n                  </If>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  table: {\n    minWidth: 700\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7)\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n    marginRight: 5\n  },\n  list: {\n    padding: 5\n  }\n}));\n\n// Table Functions\nfunction createSData(name, role, company, address, telephone) {\n  return { name, role, company, address, telephone };\n}\n\nfunction createPData(\n  name,\n  description,\n  main_img,\n  price,\n  category_name,\n  company_name\n) {\n  return { name, description, main_img, price, category_name, company_name };\n}\n\nfunction createBData(\n  name,\n  role,\n  first_name,\n  last_name,\n  address,\n  telephone,\n  gender,\n  card_number\n) {\n  return {\n    name,\n    role,\n    first_name,\n    last_name,\n    address,\n    telephone,\n    gender,\n    card_number\n  };\n}\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\n\n// Cards function\n\nconst cards = () => {\n  return (\n    <>\n      <Card text='dark' bg='danger' style={{ width: '18rem' }}>\n        <Card.Body>\n          <Card.Title>Number Of users</Card.Title>\n          <Card.Text>\n            Some quick example text to build on the card title and make up the\n            bulk of the card's content.\n          </Card.Text>\n        </Card.Body>\n      </Card>\n\n      <Card text='dark' bg='warning' style={{ width: '18rem' }}>\n        <Card.Body>\n          <Card.Title>Number Of Products</Card.Title>\n          <Card.Text>\n            Some quick example text to build on the card title and make up the\n            bulk of the card's content.\n          </Card.Text>\n        </Card.Body>\n      </Card>\n\n      <Card text='dark' bg='info' style={{ width: '18rem' }}>\n        <Card.Body>\n          <Card.Title>Card Title</Card.Title>\n          <Card.Text>\n            Some quick example text to build on the card title and make up the\n            bulk of the card's content.\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    info: state.admin.information\n  };\n};\nconst mapDispatchToProps = {\n  allSellers,\n  allActiveSellers,\n  allDeActiveSellers,\n  allBuyers,\n  allActiveBuyers,\n  allDeActiveBuyers,\n  allProducts,\n  allDProducts,\n  allAProducts,\n  allBProducts,\n  allCProducts,\n  addCategory,\n  numberOfUsers\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Admin);\n","/home/malek/ltuc/401/sportopia-front/src/reducers/bidding.js",[],"/home/malek/ltuc/401/sportopia-front/src/reducers/categories-reducer.js",["152"],"import { Category } from \"@material-ui/icons\";\n\nlet initialState = { results: [], active: '' };\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n\n  console.log(\"state\",state);\n  switch (type) {\n    case 'GET_C':\n      return{\n        results: payload,\n        active: state.active\n      };\n    case 'ACTIVE':\n     const activated =  state.results.filter((category)=> category.id === payload );\n     console.log('this is the activated',activated)\n      return {\n        results: state.results,\n        active: activated\n      }\n    //   const active = payload;\n    //   const CertainCategories = state.results\n    //   // console.log('CertainCategories insid switch case active',CertainCategories);\n    //   return { CertainCategories, active };\n    default:\n      return {\n        results : state.results,\n        active : state.active,\n      };\n  }\n};\n","/home/malek/ltuc/401/sportopia-front/src/reducers/products-reducer.js",[],"/home/malek/ltuc/401/sportopia-front/src/reducers/admin_reducer.js",[],"/home/malek/ltuc/401/sportopia-front/src/reducers/actions.js",["153"],"import superagent from 'superagent';\n\nconst API_LINK_Bidding = 'https://sportopiav1.herokuapp.com/bidding';\n\nlet ua1 = superagent.agent();\n\nexport const getBiddingItems = () => {\n  return (dispatch) => {\n    return superagent.get(API_LINK_Bidding).then((res) => {\n      console.log(res);\n    });\n  };\n};\n\nexport const getInsideBid = (product_id) => {\n  console.log('inside the actions', product_id);\n  return (dispatch) => {\n    return superagent.get(`${API_LINK_Bidding}/${product_id}`).then((res) => {\n      let product = JSON.parse(res.text).product;\n      dispatch(enterRoom({ product }));\n    });\n  };\n};\n\nexport const getBid = (payload) => {\n  return {\n    type: 'GET_UNDER_BID',\n    payload: payload\n  };\n};\n\nexport const enterRoom = (payload) => {\n  return {\n    type: 'ENTER_ROOM',\n    payload: payload\n  };\n};\n","/home/malek/ltuc/401/sportopia-front/src/reducers/product-action .js",[],"/home/malek/ltuc/401/sportopia-front/src/reducers/categories-action.js",[],"/home/malek/ltuc/401/sportopia-front/src/components/carousel/carousel.js",[],"/home/malek/ltuc/401/sportopia-front/src/reducers/admin_actions.js",[],"/home/malek/ltuc/401/sportopia-front/src/auth/auth.js",[],["154","155"],"/home/malek/ltuc/401/sportopia-front/src/if/if.js",[],"/home/malek/ltuc/401/sportopia-front/src/components/paypal/paypal.js",["156","157","158","159","160","161","162","163","164","165","166","167","168"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport {\n  getProductDetails,\n  buyUsingPaypal,\n} from '../../reducers/product-action ';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { Button } from '@material-ui/core';\n\nexport function ProductDetails(props) {\n  const classes = useStyles();\n  console.log('props inside the one paypal page', props);\n  // Context\n\n  // State\n\n  return (\n    <>\n      <div>huhuhuh</div>\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({}));\n\nconst mapStateToProps = (state) => {\n  console.log('paypal state', state);\n  return {\n    selectedProduct: state.products.selectedProduct,\n  };\n};\n\nconst mapDispatchToProps = { getProductDetails, buyUsingPaypal };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetails);\n",{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":79,"column":7,"nodeType":"175","messageId":"176","endLine":79,"endColumn":16},{"ruleId":"173","severity":1,"message":"177","line":2,"column":28,"nodeType":"175","messageId":"176","endLine":2,"endColumn":38},{"ruleId":"173","severity":1,"message":"178","line":40,"column":23,"nodeType":"175","messageId":"176","endLine":40,"endColumn":37},{"ruleId":"173","severity":1,"message":"179","line":45,"column":10,"nodeType":"175","messageId":"176","endLine":45,"endColumn":16},{"ruleId":"173","severity":1,"message":"180","line":45,"column":18,"nodeType":"175","messageId":"176","endLine":45,"endColumn":31},{"ruleId":"173","severity":1,"message":"181","line":14,"column":10,"nodeType":"175","messageId":"176","endLine":14,"endColumn":15},{"ruleId":"173","severity":1,"message":"182","line":27,"column":13,"nodeType":"175","messageId":"176","endLine":27,"endColumn":21},{"ruleId":"173","severity":1,"message":"183","line":40,"column":8,"nodeType":"175","messageId":"176","endLine":40,"endColumn":17},{"ruleId":"173","severity":1,"message":"184","line":41,"column":8,"nodeType":"175","messageId":"176","endLine":41,"endColumn":16},{"ruleId":"173","severity":1,"message":"185","line":52,"column":10,"nodeType":"175","messageId":"176","endLine":52,"endColumn":14},{"ruleId":"173","severity":1,"message":"186","line":53,"column":8,"nodeType":"175","messageId":"176","endLine":53,"endColumn":14},{"ruleId":"187","severity":1,"message":"188","line":116,"column":7,"nodeType":"189","endLine":116,"endColumn":44},{"ruleId":"173","severity":1,"message":"190","line":144,"column":10,"nodeType":"175","messageId":"176","endLine":144,"endColumn":18},{"ruleId":"173","severity":1,"message":"191","line":158,"column":9,"nodeType":"175","messageId":"176","endLine":158,"endColumn":24},{"ruleId":"173","severity":1,"message":"192","line":43,"column":11,"nodeType":"175","messageId":"176","endLine":43,"endColumn":29},{"ruleId":"173","severity":1,"message":"193","line":44,"column":9,"nodeType":"175","messageId":"176","endLine":44,"endColumn":26},{"ruleId":"173","severity":1,"message":"194","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":12},{"ruleId":"173","severity":1,"message":"195","line":4,"column":8,"nodeType":"175","messageId":"176","endLine":4,"endColumn":13},{"ruleId":"173","severity":1,"message":"196","line":6,"column":8,"nodeType":"175","messageId":"176","endLine":6,"endColumn":18},{"ruleId":"173","severity":1,"message":"197","line":7,"column":8,"nodeType":"175","messageId":"176","endLine":7,"endColumn":14},{"ruleId":"173","severity":1,"message":"198","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":26},{"ruleId":"199","severity":1,"message":"200","line":17,"column":7,"nodeType":"201","endLine":19,"endColumn":9},{"ruleId":"199","severity":1,"message":"200","line":22,"column":6,"nodeType":"201","endLine":24,"endColumn":9},{"ruleId":"173","severity":1,"message":"202","line":7,"column":10,"nodeType":"175","messageId":"176","endLine":7,"endColumn":17},{"ruleId":"173","severity":1,"message":"177","line":2,"column":17,"nodeType":"175","messageId":"176","endLine":2,"endColumn":27},{"ruleId":"173","severity":1,"message":"203","line":3,"column":10,"nodeType":"175","messageId":"176","endLine":3,"endColumn":22},{"ruleId":"173","severity":1,"message":"204","line":7,"column":16,"nodeType":"175","messageId":"176","endLine":7,"endColumn":19},{"ruleId":"173","severity":1,"message":"205","line":7,"column":21,"nodeType":"175","messageId":"176","endLine":7,"endColumn":24},{"ruleId":"173","severity":1,"message":"206","line":166,"column":9,"nodeType":"175","messageId":"176","endLine":166,"endColumn":26},{"ruleId":"173","severity":1,"message":"207","line":1,"column":10,"nodeType":"175","messageId":"176","endLine":1,"endColumn":18},{"ruleId":"173","severity":1,"message":"208","line":5,"column":5,"nodeType":"175","messageId":"176","endLine":5,"endColumn":8},{"ruleId":"169","replacedBy":"209"},{"ruleId":"171","replacedBy":"210"},{"ruleId":"173","severity":1,"message":"211","line":2,"column":17,"nodeType":"175","messageId":"176","endLine":2,"endColumn":26},{"ruleId":"173","severity":1,"message":"177","line":2,"column":28,"nodeType":"175","messageId":"176","endLine":2,"endColumn":38},{"ruleId":"173","severity":1,"message":"212","line":2,"column":40,"nodeType":"175","messageId":"176","endLine":2,"endColumn":48},{"ruleId":"173","severity":1,"message":"213","line":9,"column":8,"nodeType":"175","messageId":"176","endLine":9,"endColumn":16},{"ruleId":"173","severity":1,"message":"214","line":10,"column":8,"nodeType":"175","messageId":"176","endLine":10,"endColumn":20},{"ruleId":"173","severity":1,"message":"215","line":11,"column":8,"nodeType":"175","messageId":"176","endLine":11,"endColumn":23},{"ruleId":"173","severity":1,"message":"216","line":12,"column":8,"nodeType":"175","messageId":"176","endLine":12,"endColumn":18},{"ruleId":"173","severity":1,"message":"217","line":13,"column":8,"nodeType":"175","messageId":"176","endLine":13,"endColumn":22},{"ruleId":"173","severity":1,"message":"218","line":14,"column":8,"nodeType":"175","messageId":"176","endLine":14,"endColumn":19},{"ruleId":"173","severity":1,"message":"196","line":15,"column":8,"nodeType":"175","messageId":"176","endLine":15,"endColumn":18},{"ruleId":"173","severity":1,"message":"219","line":16,"column":8,"nodeType":"175","messageId":"176","endLine":16,"endColumn":17},{"ruleId":"173","severity":1,"message":"197","line":17,"column":10,"nodeType":"175","messageId":"176","endLine":17,"endColumn":16},{"ruleId":"173","severity":1,"message":"220","line":20,"column":9,"nodeType":"175","messageId":"176","endLine":20,"endColumn":16},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"no-unused-vars","'useStyles' is assigned a value but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'setComapnyName' is assigned a value but never used.","'logged' is assigned a value but never used.","'setLoginState' is assigned a value but never used.","'token' is assigned a value but never used.","'response' is assigned a value but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'Link' is defined but never used.","'avatar' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'anchorEl' is assigned a value but never used.","'handleMenuClose' is assigned a value but never used.","'setSingleProductId' is assigned a value but never used.","'selectedProductId' is assigned a value but never used.","'If' is defined but never used.","'Paper' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'Component' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'NavLink' is defined but never used.","'StateContext' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'handleFavProducts' is assigned a value but never used.","'Category' is defined but never used.","'ua1' is assigned a value but never used.",["221"],["222"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'GridListTileBar' is defined but never used.","'IconButton' is defined but never used.","'StarBorderIcon' is defined but never used.","'CssBaseline' is defined but never used.","'Container' is defined but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]